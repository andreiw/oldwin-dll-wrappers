#pragma comment(linker, "/export:BindMoniker=ole32.BindMoniker")
#pragma comment(linker, "/export:CLSIDFromProgID=ole32.CLSIDFromProgID")
#pragma comment(linker, "/export:CLSIDFromString=ole32.CLSIDFromString")
#pragma comment(linker, "/export:CoBuildVersion=ole32.CoBuildVersion")
#pragma comment(linker, "/export:CoCreateFreeThreadedMarshaler=ole32.CoCreateFreeThreadedMarshaler")
#pragma comment(linker, "/export:CoCreateGuid=ole32.CoCreateGuid")
#pragma comment(linker, "/export:CoCreateInstance=ole32.CoCreateInstance")
#pragma comment(linker, "/export:CoDisconnectObject=ole32.CoDisconnectObject")
#pragma comment(linker, "/export:CoDosDateTimeToFileTime=ole32.CoDosDateTimeToFileTime")
#pragma comment(linker, "/export:CoFileTimeNow=ole32.CoFileTimeNow")
#pragma comment(linker, "/export:CoFileTimeToDosDateTime=ole32.CoFileTimeToDosDateTime")
#pragma comment(linker, "/export:CoFreeAllLibraries=ole32.CoFreeAllLibraries")
#pragma comment(linker, "/export:CoFreeLibrary=ole32.CoFreeLibrary")
#pragma comment(linker, "/export:CoFreeUnusedLibraries=ole32.CoFreeUnusedLibraries")
#pragma comment(linker, "/export:CoGetCallerTID=ole32.CoGetCallerTID")
#pragma comment(linker, "/export:CoGetClassObject=ole32.CoGetClassObject")
#pragma comment(linker, "/export:CoGetCurrentLogicalThreadId=ole32.CoGetCurrentLogicalThreadId")
#pragma comment(linker, "/export:CoGetCurrentProcess=ole32.CoGetCurrentProcess")
#pragma comment(linker, "/export:CoGetInterfaceAndReleaseStream=ole32.CoGetInterfaceAndReleaseStream")
#pragma comment(linker, "/export:CoGetMalloc=ole32.CoGetMalloc")
#pragma comment(linker, "/export:CoGetMarshalSizeMax=ole32.CoGetMarshalSizeMax")
#pragma comment(linker, "/export:CoGetPSClsid=ole32.CoGetPSClsid")
#pragma comment(linker, "/export:CoGetStandardMarshal=ole32.CoGetStandardMarshal")
#pragma comment(linker, "/export:CoGetState=ole32.CoGetState")
#pragma comment(linker, "/export:CoGetTreatAsClass=ole32.CoGetTreatAsClass")
#pragma comment(linker, "/export:CoInitialize=ole32.CoInitialize")
#pragma comment(linker, "/export:CoInitializeWOW=ole32.CoInitializeWOW")
#pragma comment(linker, "/export:CoIsHandlerConnected=ole32.CoIsHandlerConnected")
#pragma comment(linker, "/export:CoIsOle1Class=ole32.CoIsOle1Class")
#pragma comment(linker, "/export:CoLoadLibrary=ole32.CoLoadLibrary")
#pragma comment(linker, "/export:CoLockObjectExternal=ole32.CoLockObjectExternal")
#pragma comment(linker, "/export:CoMarshalHresult=ole32.CoMarshalHresult")
#pragma comment(linker, "/export:CoMarshalInterThreadInterfaceInStream=ole32.CoMarshalInterThreadInterfaceInStream")
#pragma comment(linker, "/export:CoMarshalInterface=ole32.CoMarshalInterface")
#pragma comment(linker, "/export:CoQueryReleaseObject=ole32.CoQueryReleaseObject")
#pragma comment(linker, "/export:CoRegisterClassObject=ole32.CoRegisterClassObject")
#pragma comment(linker, "/export:CoRegisterMallocSpy=ole32.CoRegisterMallocSpy")
#pragma comment(linker, "/export:CoRegisterMessageFilter=ole32.CoRegisterMessageFilter")
#pragma comment(linker, "/export:CoReleaseMarshalData=ole32.CoReleaseMarshalData")
#pragma comment(linker, "/export:CoRevokeClassObject=ole32.CoRevokeClassObject")
#pragma comment(linker, "/export:CoRevokeMallocSpy=ole32.CoRevokeMallocSpy")
#pragma comment(linker, "/export:CoSetState=ole32.CoSetState")
#pragma comment(linker, "/export:CoTaskMemAlloc=ole32.CoTaskMemAlloc")
#pragma comment(linker, "/export:CoTaskMemFree=ole32.CoTaskMemFree")
#pragma comment(linker, "/export:CoTaskMemRealloc=ole32.CoTaskMemRealloc")
#pragma comment(linker, "/export:CoTreatAsClass=ole32.CoTreatAsClass")
#pragma comment(linker, "/export:CoUninitialize=ole32.CoUninitialize")
#pragma comment(linker, "/export:CoUnloadingWOW=ole32.CoUnloadingWOW")
#pragma comment(linker, "/export:CoUnmarshalHresult=ole32.CoUnmarshalHresult")
#pragma comment(linker, "/export:CoUnmarshalInterface=ole32.CoUnmarshalInterface")
#pragma comment(linker, "/export:CreateAntiMoniker=ole32.CreateAntiMoniker")
#pragma comment(linker, "/export:CreateBindCtx=ole32.CreateBindCtx")
#pragma comment(linker, "/export:CreateDataAdviseHolder=ole32.CreateDataAdviseHolder")
#pragma comment(linker, "/export:CreateDataCache=ole32.CreateDataCache")
#pragma comment(linker, "/export:CreateFileMoniker=ole32.CreateFileMoniker")
#pragma comment(linker, "/export:CreateGenericComposite=ole32.CreateGenericComposite")
#pragma comment(linker, "/export:CreateILockBytesOnHGlobal=ole32.CreateILockBytesOnHGlobal")
#pragma comment(linker, "/export:CreateItemMoniker=ole32.CreateItemMoniker")
#pragma comment(linker, "/export:CreateOleAdviseHolder=ole32.CreateOleAdviseHolder")
#pragma comment(linker, "/export:CreatePointerMoniker=ole32.CreatePointerMoniker")
#pragma comment(linker, "/export:CreateStreamOnHGlobal=ole32.CreateStreamOnHGlobal")
#pragma comment(linker, "/export:DllDebugObjectRPCHook=ole32.DllDebugObjectRPCHook")
#pragma comment(linker, "/export:DllGetClassObject=ole32.DllGetClassObject")
#pragma comment(linker, "/export:DllGetClassObjectWOW=ole32.DllGetClassObjectWOW")
#pragma comment(linker, "/export:DoDragDrop=ole32.DoDragDrop")
#pragma comment(linker, "/export:EnableHookObject=ole32.EnableHookObject")
#pragma comment(linker, "/export:GetClassFile=ole32.GetClassFile")
#pragma comment(linker, "/export:GetConvertStg=ole32.GetConvertStg")
#pragma comment(linker, "/export:GetDocumentBitStg=ole32.GetDocumentBitStg")
#pragma comment(linker, "/export:GetHGlobalFromILockBytes=ole32.GetHGlobalFromILockBytes")
#pragma comment(linker, "/export:GetHGlobalFromStream=ole32.GetHGlobalFromStream")
#pragma comment(linker, "/export:GetHookInterface=ole32.GetHookInterface")
#pragma comment(linker, "/export:GetRunningObjectTable=ole32.GetRunningObjectTable")
#pragma comment(linker, "/export:IIDFromString=ole32.IIDFromString")
#pragma comment(linker, "/export:IsAccelerator=ole32.IsAccelerator")
#pragma comment(linker, "/export:IsEqualGUID=ole32.IsEqualGUID")
#pragma comment(linker, "/export:IsValidIid=ole32.IsValidIid")
#pragma comment(linker, "/export:IsValidInterface=ole32.IsValidInterface")
#pragma comment(linker, "/export:IsValidPtrIn=ole32.IsValidPtrIn")
#pragma comment(linker, "/export:IsValidPtrOut=ole32.IsValidPtrOut")
#pragma comment(linker, "/export:MkParseDisplayName=ole32.MkParseDisplayName")
#pragma comment(linker, "/export:MonikerCommonPrefixWith=ole32.MonikerCommonPrefixWith")
#pragma comment(linker, "/export:MonikerRelativePathTo=ole32.MonikerRelativePathTo")
#pragma comment(linker, "/export:OleBuildVersion=ole32.OleBuildVersion")
#pragma comment(linker, "/export:OleConvertIStorageToOLESTREAM=ole32.OleConvertIStorageToOLESTREAM")
#pragma comment(linker, "/export:OleConvertIStorageToOLESTREAMEx=ole32.OleConvertIStorageToOLESTREAMEx")
#pragma comment(linker, "/export:OleConvertOLESTREAMToIStorage=ole32.OleConvertOLESTREAMToIStorage")
#pragma comment(linker, "/export:OleConvertOLESTREAMToIStorageEx=ole32.OleConvertOLESTREAMToIStorageEx")
#pragma comment(linker, "/export:OleCreate=ole32.OleCreate")
#pragma comment(linker, "/export:OleCreateDefaultHandler=ole32.OleCreateDefaultHandler")
#pragma comment(linker, "/export:OleCreateEmbeddingHelper=ole32.OleCreateEmbeddingHelper")
#pragma comment(linker, "/export:OleCreateFromData=ole32.OleCreateFromData")
#pragma comment(linker, "/export:OleCreateFromFile=ole32.OleCreateFromFile")
#pragma comment(linker, "/export:OleCreateLink=ole32.OleCreateLink")
#pragma comment(linker, "/export:OleCreateLinkFromData=ole32.OleCreateLinkFromData")
#pragma comment(linker, "/export:OleCreateLinkToFile=ole32.OleCreateLinkToFile")
#pragma comment(linker, "/export:OleCreateMenuDescriptor=ole32.OleCreateMenuDescriptor")
#pragma comment(linker, "/export:OleCreateStaticFromData=ole32.OleCreateStaticFromData")
#pragma comment(linker, "/export:OleDestroyMenuDescriptor=ole32.OleDestroyMenuDescriptor")
#pragma comment(linker, "/export:OleDoAutoConvert=ole32.OleDoAutoConvert")
#pragma comment(linker, "/export:OleDraw=ole32.OleDraw")
#pragma comment(linker, "/export:OleDuplicateData=ole32.OleDuplicateData")
#pragma comment(linker, "/export:OleFlushClipboard=ole32.OleFlushClipboard")
#pragma comment(linker, "/export:OleGetAutoConvert=ole32.OleGetAutoConvert")
#pragma comment(linker, "/export:OleGetClipboard=ole32.OleGetClipboard")
#pragma comment(linker, "/export:OleGetIconOfClass=ole32.OleGetIconOfClass")
#pragma comment(linker, "/export:OleGetIconOfFile=ole32.OleGetIconOfFile")
#pragma comment(linker, "/export:OleInitialize=ole32.OleInitialize")
#pragma comment(linker, "/export:OleInitializeWOW=ole32.OleInitializeWOW")
#pragma comment(linker, "/export:OleIsCurrentClipboard=ole32.OleIsCurrentClipboard")
#pragma comment(linker, "/export:OleIsRunning=ole32.OleIsRunning")
#pragma comment(linker, "/export:OleLoad=ole32.OleLoad")
#pragma comment(linker, "/export:OleLoadFromStream=ole32.OleLoadFromStream")
#pragma comment(linker, "/export:OleLockRunning=ole32.OleLockRunning")
#pragma comment(linker, "/export:OleMetafilePictFromIconAndLabel=ole32.OleMetafilePictFromIconAndLabel")
#pragma comment(linker, "/export:OleNoteObjectVisible=ole32.OleNoteObjectVisible")
#pragma comment(linker, "/export:OleQueryCreateFromData=ole32.OleQueryCreateFromData")
#pragma comment(linker, "/export:OleQueryLinkFromData=ole32.OleQueryLinkFromData")
#pragma comment(linker, "/export:OleRegEnumFormatEtc=ole32.OleRegEnumFormatEtc")
#pragma comment(linker, "/export:OleRegEnumVerbs=ole32.OleRegEnumVerbs")
#pragma comment(linker, "/export:OleRegGetMiscStatus=ole32.OleRegGetMiscStatus")
#pragma comment(linker, "/export:OleRegGetUserType=ole32.OleRegGetUserType")
#pragma comment(linker, "/export:OleRun=ole32.OleRun")
#pragma comment(linker, "/export:OleSave=ole32.OleSave")
#pragma comment(linker, "/export:OleSaveToStream=ole32.OleSaveToStream")
#pragma comment(linker, "/export:OleSetAutoConvert=ole32.OleSetAutoConvert")
#pragma comment(linker, "/export:OleSetClipboard=ole32.OleSetClipboard")
#pragma comment(linker, "/export:OleSetContainedObject=ole32.OleSetContainedObject")
#pragma comment(linker, "/export:OleSetMenuDescriptor=ole32.OleSetMenuDescriptor")
#pragma comment(linker, "/export:OleTranslateAccelerator=ole32.OleTranslateAccelerator")
#pragma comment(linker, "/export:OleUninitialize=ole32.OleUninitialize")
#pragma comment(linker, "/export:OpenOrCreateStream=ole32.OpenOrCreateStream")
#pragma comment(linker, "/export:ProgIDFromCLSID=ole32.ProgIDFromCLSID")
#pragma comment(linker, "/export:ReadClassStg=ole32.ReadClassStg")
#pragma comment(linker, "/export:ReadClassStm=ole32.ReadClassStm")
#pragma comment(linker, "/export:ReadFmtUserTypeStg=ole32.ReadFmtUserTypeStg")
#pragma comment(linker, "/export:ReadOleStg=ole32.ReadOleStg")
#pragma comment(linker, "/export:ReadStringStream=ole32.ReadStringStream")
#pragma comment(linker, "/export:RegisterDragDrop=ole32.RegisterDragDrop")
#pragma comment(linker, "/export:ReleaseStgMedium=ole32.ReleaseStgMedium")
#pragma comment(linker, "/export:RevokeDragDrop=ole32.RevokeDragDrop")
#pragma comment(linker, "/export:SetConvertStg=ole32.SetConvertStg")
#pragma comment(linker, "/export:SetDocumentBitStg=ole32.SetDocumentBitStg")
#pragma comment(linker, "/export:StgCreateDocfile=ole32.StgCreateDocfile")
#pragma comment(linker, "/export:StgCreateDocfileOnILockBytes=ole32.StgCreateDocfileOnILockBytes")
#pragma comment(linker, "/export:StgIsStorageFile=ole32.StgIsStorageFile")
#pragma comment(linker, "/export:StgIsStorageILockBytes=ole32.StgIsStorageILockBytes")
#pragma comment(linker, "/export:StgOpenStorage=ole32.StgOpenStorage")
#pragma comment(linker, "/export:StgOpenStorageOnILockBytes=ole32.StgOpenStorageOnILockBytes")
#pragma comment(linker, "/export:StgSetTimes=ole32.StgSetTimes")
#pragma comment(linker, "/export:StringFromCLSID=ole32.StringFromCLSID")
#pragma comment(linker, "/export:StringFromGUID2=ole32.StringFromGUID2")
#pragma comment(linker, "/export:StringFromIID=ole32.StringFromIID")
#pragma comment(linker, "/export:UtConvertDvtd16toDvtd32=ole32.UtConvertDvtd16toDvtd32")
#pragma comment(linker, "/export:UtConvertDvtd32toDvtd16=ole32.UtConvertDvtd32toDvtd16")
#pragma comment(linker, "/export:UtGetDvtd16Info=ole32.UtGetDvtd16Info")
#pragma comment(linker, "/export:UtGetDvtd32Info=ole32.UtGetDvtd32Info")
#pragma comment(linker, "/export:WriteClassStg=ole32.WriteClassStg")
#pragma comment(linker, "/export:WriteClassStm=ole32.WriteClassStm")
#pragma comment(linker, "/export:WriteFmtUserTypeStg=ole32.WriteFmtUserTypeStg")
#pragma comment(linker, "/export:WriteOleStg=ole32.WriteOleStg")
#pragma comment(linker, "/export:WriteStringStream=ole32.WriteStringStream")
