#pragma comment(linker, "/export:?Allocate@CBufferAllocator@@UAEPAXK@Z=ntdll.?Allocate@CBufferAllocator@@UAEPAXK@Z")
#pragma comment(linker, "/export:CsrAllocateCaptureBuffer=ntdll.CsrAllocateCaptureBuffer")
#pragma comment(linker, "/export:CsrAllocateCapturePointer=ntdll.CsrAllocateCapturePointer")
#pragma comment(linker, "/export:CsrAllocateMessagePointer=ntdll.CsrAllocateMessagePointer")
#pragma comment(linker, "/export:CsrCaptureMessageBuffer=ntdll.CsrCaptureMessageBuffer")
#pragma comment(linker, "/export:CsrCaptureMessageString=ntdll.CsrCaptureMessageString")
#pragma comment(linker, "/export:CsrCaptureTimeout=ntdll.CsrCaptureTimeout")
#pragma comment(linker, "/export:CsrClientCallServer=ntdll.CsrClientCallServer")
#pragma comment(linker, "/export:CsrClientConnectToServer=ntdll.CsrClientConnectToServer")
#pragma comment(linker, "/export:CsrFreeCaptureBuffer=ntdll.CsrFreeCaptureBuffer")
#pragma comment(linker, "/export:CsrIdentifyAlertableThread=ntdll.CsrIdentifyAlertableThread")
#pragma comment(linker, "/export:CsrNewThread=ntdll.CsrNewThread")
#pragma comment(linker, "/export:CsrProbeForRead=ntdll.CsrProbeForRead")
#pragma comment(linker, "/export:CsrProbeForWrite=ntdll.CsrProbeForWrite")
#pragma comment(linker, "/export:CsrSetPriorityClass=ntdll.CsrSetPriorityClass")
#pragma comment(linker, "/export:DbgBreakPoint=ntdll.DbgBreakPoint")
#pragma comment(linker, "/export:DbgPrint=ntdll.DbgPrint")
#pragma comment(linker, "/export:DbgPrompt=ntdll.DbgPrompt")
#pragma comment(linker, "/export:DbgSsHandleKmApiMsg=ntdll.DbgSsHandleKmApiMsg")
#pragma comment(linker, "/export:DbgSsInitialize=ntdll.DbgSsInitialize")
#pragma comment(linker, "/export:DbgUiConnectToDbg=ntdll.DbgUiConnectToDbg")
#pragma comment(linker, "/export:DbgUiContinue=ntdll.DbgUiContinue")
#pragma comment(linker, "/export:DbgUiWaitStateChange=ntdll.DbgUiWaitStateChange")
#pragma comment(linker, "/export:DbgUserBreakPoint=ntdll.DbgUserBreakPoint")
#pragma comment(linker, "/export:KiRaiseUserExceptionDispatcher=ntdll.KiRaiseUserExceptionDispatcher")
#pragma comment(linker, "/export:KiUserApcDispatcher=ntdll.KiUserApcDispatcher")
#pragma comment(linker, "/export:KiUserCallbackDispatcher=ntdll.KiUserCallbackDispatcher")
#pragma comment(linker, "/export:KiUserExceptionDispatcher=ntdll.KiUserExceptionDispatcher")
#pragma comment(linker, "/export:LdrAccessResource=ntdll.LdrAccessResource")
#pragma comment(linker, "/export:LdrDisableThreadCalloutsForDll=ntdll.LdrDisableThreadCalloutsForDll")
#pragma comment(linker, "/export:LdrEnumResources=ntdll.LdrEnumResources")
#pragma comment(linker, "/export:LdrFindEntryForAddress=ntdll.LdrFindEntryForAddress")
#pragma comment(linker, "/export:LdrFindResourceDirectory_U=ntdll.LdrFindResourceDirectory_U")
#pragma comment(linker, "/export:LdrFindResource_U=ntdll.LdrFindResource_U")
#pragma comment(linker, "/export:LdrGetDllHandle=ntdll.LdrGetDllHandle")
#pragma comment(linker, "/export:LdrGetProcedureAddress=ntdll.LdrGetProcedureAddress")
#pragma comment(linker, "/export:LdrInitializeThunk=ntdll.LdrInitializeThunk")
#pragma comment(linker, "/export:LdrLoadDll=ntdll.LdrLoadDll")
#pragma comment(linker, "/export:LdrProcessRelocationBlock=ntdll.LdrProcessRelocationBlock")
#pragma comment(linker, "/export:LdrQueryImageFileExecutionOptions=ntdll.LdrQueryImageFileExecutionOptions")
#pragma comment(linker, "/export:LdrQueryProcessModuleInformation=ntdll.LdrQueryProcessModuleInformation")
#pragma comment(linker, "/export:LdrShutdownProcess=ntdll.LdrShutdownProcess")
#pragma comment(linker, "/export:LdrShutdownThread=ntdll.LdrShutdownThread")
#pragma comment(linker, "/export:LdrUnloadDll=ntdll.LdrUnloadDll")
#pragma comment(linker, "/export:LdrVerifyImageMatchesChecksum=ntdll.LdrVerifyImageMatchesChecksum")
#pragma comment(linker, "/export:NPXEMULATORTABLE=ntdll.NPXEMULATORTABLE")
#pragma comment(linker, "/export:NlsAnsiCodePage=ntdll.NlsAnsiCodePage")
#pragma comment(linker, "/export:NlsMbCodePageTag=ntdll.NlsMbCodePageTag")
#pragma comment(linker, "/export:NlsMbOemCodePageTag=ntdll.NlsMbOemCodePageTag")
#pragma comment(linker, "/export:NtAcceptConnectPort=ntdll.NtAcceptConnectPort")
#pragma comment(linker, "/export:NtAccessCheck=ntdll.NtAccessCheck")
#pragma comment(linker, "/export:NtAccessCheckAndAuditAlarm=ntdll.NtAccessCheckAndAuditAlarm")
#pragma comment(linker, "/export:NtAddAtom=ntdll.NtAddAtom")
#pragma comment(linker, "/export:NtAdjustGroupsToken=ntdll.NtAdjustGroupsToken")
#pragma comment(linker, "/export:NtAdjustPrivilegesToken=ntdll.NtAdjustPrivilegesToken")
#pragma comment(linker, "/export:NtAlertResumeThread=ntdll.NtAlertResumeThread")
#pragma comment(linker, "/export:NtAlertThread=ntdll.NtAlertThread")
#pragma comment(linker, "/export:NtAllocateLocallyUniqueId=ntdll.NtAllocateLocallyUniqueId")
#pragma comment(linker, "/export:NtAllocateUuids=ntdll.NtAllocateUuids")
#pragma comment(linker, "/export:NtAllocateVirtualMemory=ntdll.NtAllocateVirtualMemory")
#pragma comment(linker, "/export:NtCallbackReturn=ntdll.NtCallbackReturn")
#pragma comment(linker, "/export:NtCancelIoFile=ntdll.NtCancelIoFile")
#pragma comment(linker, "/export:NtCancelTimer=ntdll.NtCancelTimer")
#pragma comment(linker, "/export:NtClearEvent=ntdll.NtClearEvent")
#pragma comment(linker, "/export:NtClose=ntdll.NtClose")
#pragma comment(linker, "/export:NtCloseObjectAuditAlarm=ntdll.NtCloseObjectAuditAlarm")
#pragma comment(linker, "/export:NtCompleteConnectPort=ntdll.NtCompleteConnectPort")
#pragma comment(linker, "/export:NtConnectPort=ntdll.NtConnectPort")
#pragma comment(linker, "/export:NtContinue=ntdll.NtContinue")
#pragma comment(linker, "/export:NtCreateChannel=ntdll.NtCreateChannel")
#pragma comment(linker, "/export:NtCreateDirectoryObject=ntdll.NtCreateDirectoryObject")
#pragma comment(linker, "/export:NtCreateEvent=ntdll.NtCreateEvent")
#pragma comment(linker, "/export:NtCreateEventPair=ntdll.NtCreateEventPair")
#pragma comment(linker, "/export:NtCreateFile=ntdll.NtCreateFile")
#pragma comment(linker, "/export:NtCreateIoCompletion=ntdll.NtCreateIoCompletion")
#pragma comment(linker, "/export:NtCreateKey=ntdll.NtCreateKey")
#pragma comment(linker, "/export:NtCreateMailslotFile=ntdll.NtCreateMailslotFile")
#pragma comment(linker, "/export:NtCreateMutant=ntdll.NtCreateMutant")
#pragma comment(linker, "/export:NtCreateNamedPipeFile=ntdll.NtCreateNamedPipeFile")
#pragma comment(linker, "/export:NtCreatePagingFile=ntdll.NtCreatePagingFile")
#pragma comment(linker, "/export:NtCreatePort=ntdll.NtCreatePort")
#pragma comment(linker, "/export:NtCreateProcess=ntdll.NtCreateProcess")
#pragma comment(linker, "/export:NtCreateProfile=ntdll.NtCreateProfile")
#pragma comment(linker, "/export:NtCreateSection=ntdll.NtCreateSection")
#pragma comment(linker, "/export:NtCreateSemaphore=ntdll.NtCreateSemaphore")
#pragma comment(linker, "/export:NtCreateSymbolicLinkObject=ntdll.NtCreateSymbolicLinkObject")
#pragma comment(linker, "/export:NtCreateThread=ntdll.NtCreateThread")
#pragma comment(linker, "/export:NtCreateTimer=ntdll.NtCreateTimer")
#pragma comment(linker, "/export:NtCreateToken=ntdll.NtCreateToken")
#pragma comment(linker, "/export:NtCurrentTeb=ntdll.NtCurrentTeb")
#pragma comment(linker, "/export:NtDelayExecution=ntdll.NtDelayExecution")
#pragma comment(linker, "/export:NtDeleteAtom=ntdll.NtDeleteAtom")
#pragma comment(linker, "/export:NtDeleteFile=ntdll.NtDeleteFile")
#pragma comment(linker, "/export:NtDeleteKey=ntdll.NtDeleteKey")
#pragma comment(linker, "/export:NtDeleteObjectAuditAlarm=ntdll.NtDeleteObjectAuditAlarm")
#pragma comment(linker, "/export:NtDeleteValueKey=ntdll.NtDeleteValueKey")
#pragma comment(linker, "/export:NtDeviceIoControlFile=ntdll.NtDeviceIoControlFile")
#pragma comment(linker, "/export:NtDisplayString=ntdll.NtDisplayString")
#pragma comment(linker, "/export:NtDuplicateObject=ntdll.NtDuplicateObject")
#pragma comment(linker, "/export:NtDuplicateToken=ntdll.NtDuplicateToken")
#pragma comment(linker, "/export:NtEnumerateKey=ntdll.NtEnumerateKey")
#pragma comment(linker, "/export:NtEnumerateValueKey=ntdll.NtEnumerateValueKey")
#pragma comment(linker, "/export:NtExtendSection=ntdll.NtExtendSection")
#pragma comment(linker, "/export:NtFindAtom=ntdll.NtFindAtom")
#pragma comment(linker, "/export:NtFlushBuffersFile=ntdll.NtFlushBuffersFile")
#pragma comment(linker, "/export:NtFlushInstructionCache=ntdll.NtFlushInstructionCache")
#pragma comment(linker, "/export:NtFlushKey=ntdll.NtFlushKey")
#pragma comment(linker, "/export:NtFlushVirtualMemory=ntdll.NtFlushVirtualMemory")
#pragma comment(linker, "/export:NtFlushWriteBuffer=ntdll.NtFlushWriteBuffer")
#pragma comment(linker, "/export:NtFreeVirtualMemory=ntdll.NtFreeVirtualMemory")
#pragma comment(linker, "/export:NtFsControlFile=ntdll.NtFsControlFile")
#pragma comment(linker, "/export:NtGetContextThread=ntdll.NtGetContextThread")
#pragma comment(linker, "/export:NtGetPlugPlayEvent=ntdll.NtGetPlugPlayEvent")
#pragma comment(linker, "/export:NtGetTickCount=ntdll.NtGetTickCount")
#pragma comment(linker, "/export:NtImpersonateClientOfPort=ntdll.NtImpersonateClientOfPort")
#pragma comment(linker, "/export:NtImpersonateThread=ntdll.NtImpersonateThread")
#pragma comment(linker, "/export:NtInitializeRegistry=ntdll.NtInitializeRegistry")
#pragma comment(linker, "/export:NtListenChannel=ntdll.NtListenChannel")
#pragma comment(linker, "/export:NtListenPort=ntdll.NtListenPort")
#pragma comment(linker, "/export:NtLoadDriver=ntdll.NtLoadDriver")
#pragma comment(linker, "/export:NtLoadKey=ntdll.NtLoadKey")
#pragma comment(linker, "/export:NtLoadKey2=ntdll.NtLoadKey2")
#pragma comment(linker, "/export:NtLockFile=ntdll.NtLockFile")
#pragma comment(linker, "/export:NtLockVirtualMemory=ntdll.NtLockVirtualMemory")
#pragma comment(linker, "/export:NtMakeTemporaryObject=ntdll.NtMakeTemporaryObject")
#pragma comment(linker, "/export:NtMapViewOfSection=ntdll.NtMapViewOfSection")
#pragma comment(linker, "/export:NtNotifyChangeDirectoryFile=ntdll.NtNotifyChangeDirectoryFile")
#pragma comment(linker, "/export:NtNotifyChangeKey=ntdll.NtNotifyChangeKey")
#pragma comment(linker, "/export:NtOpenChannel=ntdll.NtOpenChannel")
#pragma comment(linker, "/export:NtOpenDirectoryObject=ntdll.NtOpenDirectoryObject")
#pragma comment(linker, "/export:NtOpenEvent=ntdll.NtOpenEvent")
#pragma comment(linker, "/export:NtOpenEventPair=ntdll.NtOpenEventPair")
#pragma comment(linker, "/export:NtOpenFile=ntdll.NtOpenFile")
#pragma comment(linker, "/export:NtOpenIoCompletion=ntdll.NtOpenIoCompletion")
#pragma comment(linker, "/export:NtOpenKey=ntdll.NtOpenKey")
#pragma comment(linker, "/export:NtOpenMutant=ntdll.NtOpenMutant")
#pragma comment(linker, "/export:NtOpenObjectAuditAlarm=ntdll.NtOpenObjectAuditAlarm")
#pragma comment(linker, "/export:NtOpenProcess=ntdll.NtOpenProcess")
#pragma comment(linker, "/export:NtOpenProcessToken=ntdll.NtOpenProcessToken")
#pragma comment(linker, "/export:NtOpenSection=ntdll.NtOpenSection")
#pragma comment(linker, "/export:NtOpenSemaphore=ntdll.NtOpenSemaphore")
#pragma comment(linker, "/export:NtOpenSymbolicLinkObject=ntdll.NtOpenSymbolicLinkObject")
#pragma comment(linker, "/export:NtOpenThread=ntdll.NtOpenThread")
#pragma comment(linker, "/export:NtOpenThreadToken=ntdll.NtOpenThreadToken")
#pragma comment(linker, "/export:NtOpenTimer=ntdll.NtOpenTimer")
#pragma comment(linker, "/export:NtPlugPlayControl=ntdll.NtPlugPlayControl")
#pragma comment(linker, "/export:NtPrivilegeCheck=ntdll.NtPrivilegeCheck")
#pragma comment(linker, "/export:NtPrivilegeObjectAuditAlarm=ntdll.NtPrivilegeObjectAuditAlarm")
#pragma comment(linker, "/export:NtPrivilegedServiceAuditAlarm=ntdll.NtPrivilegedServiceAuditAlarm")
#pragma comment(linker, "/export:NtProtectVirtualMemory=ntdll.NtProtectVirtualMemory")
#pragma comment(linker, "/export:NtPulseEvent=ntdll.NtPulseEvent")
#pragma comment(linker, "/export:NtQueryAttributesFile=ntdll.NtQueryAttributesFile")
#pragma comment(linker, "/export:NtQueryDefaultLocale=ntdll.NtQueryDefaultLocale")
#pragma comment(linker, "/export:NtQueryDirectoryFile=ntdll.NtQueryDirectoryFile")
#pragma comment(linker, "/export:NtQueryDirectoryObject=ntdll.NtQueryDirectoryObject")
#pragma comment(linker, "/export:NtQueryEaFile=ntdll.NtQueryEaFile")
#pragma comment(linker, "/export:NtQueryEvent=ntdll.NtQueryEvent")
#pragma comment(linker, "/export:NtQueryFullAttributesFile=ntdll.NtQueryFullAttributesFile")
#pragma comment(linker, "/export:NtQueryInformationAtom=ntdll.NtQueryInformationAtom")
#pragma comment(linker, "/export:NtQueryInformationFile=ntdll.NtQueryInformationFile")
#pragma comment(linker, "/export:NtQueryInformationPort=ntdll.NtQueryInformationPort")
#pragma comment(linker, "/export:NtQueryInformationProcess=ntdll.NtQueryInformationProcess")
#pragma comment(linker, "/export:NtQueryInformationThread=ntdll.NtQueryInformationThread")
#pragma comment(linker, "/export:NtQueryInformationToken=ntdll.NtQueryInformationToken")
#pragma comment(linker, "/export:NtQueryIntervalProfile=ntdll.NtQueryIntervalProfile")
#pragma comment(linker, "/export:NtQueryIoCompletion=ntdll.NtQueryIoCompletion")
#pragma comment(linker, "/export:NtQueryKey=ntdll.NtQueryKey")
#pragma comment(linker, "/export:NtQueryMultipleValueKey=ntdll.NtQueryMultipleValueKey")
#pragma comment(linker, "/export:NtQueryMutant=ntdll.NtQueryMutant")
#pragma comment(linker, "/export:NtQueryObject=ntdll.NtQueryObject")
#pragma comment(linker, "/export:NtQueryOleDirectoryFile=ntdll.NtQueryOleDirectoryFile")
#pragma comment(linker, "/export:NtQueryPerformanceCounter=ntdll.NtQueryPerformanceCounter")
#pragma comment(linker, "/export:NtQuerySection=ntdll.NtQuerySection")
#pragma comment(linker, "/export:NtQuerySecurityObject=ntdll.NtQuerySecurityObject")
#pragma comment(linker, "/export:NtQuerySemaphore=ntdll.NtQuerySemaphore")
#pragma comment(linker, "/export:NtQuerySymbolicLinkObject=ntdll.NtQuerySymbolicLinkObject")
#pragma comment(linker, "/export:NtQuerySystemEnvironmentValue=ntdll.NtQuerySystemEnvironmentValue")
#pragma comment(linker, "/export:NtQuerySystemInformation=ntdll.NtQuerySystemInformation")
#pragma comment(linker, "/export:NtQuerySystemTime=ntdll.NtQuerySystemTime")
#pragma comment(linker, "/export:NtQueryTimer=ntdll.NtQueryTimer")
#pragma comment(linker, "/export:NtQueryTimerResolution=ntdll.NtQueryTimerResolution")
#pragma comment(linker, "/export:NtQueryValueKey=ntdll.NtQueryValueKey")
#pragma comment(linker, "/export:NtQueryVirtualMemory=ntdll.NtQueryVirtualMemory")
#pragma comment(linker, "/export:NtQueryVolumeInformationFile=ntdll.NtQueryVolumeInformationFile")
#pragma comment(linker, "/export:NtQueueApcThread=ntdll.NtQueueApcThread")
#pragma comment(linker, "/export:NtRaiseException=ntdll.NtRaiseException")
#pragma comment(linker, "/export:NtRaiseHardError=ntdll.NtRaiseHardError")
#pragma comment(linker, "/export:NtReadFile=ntdll.NtReadFile")
#pragma comment(linker, "/export:NtReadFileScatter=ntdll.NtReadFileScatter")
#pragma comment(linker, "/export:NtReadRequestData=ntdll.NtReadRequestData")
#pragma comment(linker, "/export:NtReadVirtualMemory=ntdll.NtReadVirtualMemory")
#pragma comment(linker, "/export:NtRegisterThreadTerminatePort=ntdll.NtRegisterThreadTerminatePort")
#pragma comment(linker, "/export:NtReleaseMutant=ntdll.NtReleaseMutant")
#pragma comment(linker, "/export:NtReleaseSemaphore=ntdll.NtReleaseSemaphore")
#pragma comment(linker, "/export:NtRemoveIoCompletion=ntdll.NtRemoveIoCompletion")
#pragma comment(linker, "/export:NtReplaceKey=ntdll.NtReplaceKey")
#pragma comment(linker, "/export:NtReplyPort=ntdll.NtReplyPort")
#pragma comment(linker, "/export:NtReplyWaitReceivePort=ntdll.NtReplyWaitReceivePort")
#pragma comment(linker, "/export:NtReplyWaitReplyPort=ntdll.NtReplyWaitReplyPort")
#pragma comment(linker, "/export:NtReplyWaitSendChannel=ntdll.NtReplyWaitSendChannel")
#pragma comment(linker, "/export:NtRequestPort=ntdll.NtRequestPort")
#pragma comment(linker, "/export:NtRequestWaitReplyPort=ntdll.NtRequestWaitReplyPort")
#pragma comment(linker, "/export:NtResetEvent=ntdll.NtResetEvent")
#pragma comment(linker, "/export:NtRestoreKey=ntdll.NtRestoreKey")
#pragma comment(linker, "/export:NtResumeThread=ntdll.NtResumeThread")
#pragma comment(linker, "/export:NtSaveKey=ntdll.NtSaveKey")
#pragma comment(linker, "/export:NtSendWaitReplyChannel=ntdll.NtSendWaitReplyChannel")
#pragma comment(linker, "/export:NtSetContextChannel=ntdll.NtSetContextChannel")
#pragma comment(linker, "/export:NtSetContextThread=ntdll.NtSetContextThread")
#pragma comment(linker, "/export:NtSetDefaultHardErrorPort=ntdll.NtSetDefaultHardErrorPort")
#pragma comment(linker, "/export:NtSetDefaultLocale=ntdll.NtSetDefaultLocale")
#pragma comment(linker, "/export:NtSetEaFile=ntdll.NtSetEaFile")
#pragma comment(linker, "/export:NtSetEvent=ntdll.NtSetEvent")
#pragma comment(linker, "/export:NtSetHighEventPair=ntdll.NtSetHighEventPair")
#pragma comment(linker, "/export:NtSetHighWaitLowEventPair=ntdll.NtSetHighWaitLowEventPair")
#pragma comment(linker, "/export:NtSetHighWaitLowThread=ntdll.NtSetHighWaitLowThread")
#pragma comment(linker, "/export:NtSetInformationFile=ntdll.NtSetInformationFile")
#pragma comment(linker, "/export:NtSetInformationKey=ntdll.NtSetInformationKey")
#pragma comment(linker, "/export:NtSetInformationObject=ntdll.NtSetInformationObject")
#pragma comment(linker, "/export:NtSetInformationProcess=ntdll.NtSetInformationProcess")
#pragma comment(linker, "/export:NtSetInformationThread=ntdll.NtSetInformationThread")
#pragma comment(linker, "/export:NtSetInformationToken=ntdll.NtSetInformationToken")
#pragma comment(linker, "/export:NtSetIntervalProfile=ntdll.NtSetIntervalProfile")
#pragma comment(linker, "/export:NtSetIoCompletion=ntdll.NtSetIoCompletion")
#pragma comment(linker, "/export:NtSetLdtEntries=ntdll.NtSetLdtEntries")
#pragma comment(linker, "/export:NtSetLowEventPair=ntdll.NtSetLowEventPair")
#pragma comment(linker, "/export:NtSetLowWaitHighEventPair=ntdll.NtSetLowWaitHighEventPair")
#pragma comment(linker, "/export:NtSetLowWaitHighThread=ntdll.NtSetLowWaitHighThread")
#pragma comment(linker, "/export:NtSetSecurityObject=ntdll.NtSetSecurityObject")
#pragma comment(linker, "/export:NtSetSystemEnvironmentValue=ntdll.NtSetSystemEnvironmentValue")
#pragma comment(linker, "/export:NtSetSystemInformation=ntdll.NtSetSystemInformation")
#pragma comment(linker, "/export:NtSetSystemPowerState=ntdll.NtSetSystemPowerState")
#pragma comment(linker, "/export:NtSetSystemTime=ntdll.NtSetSystemTime")
#pragma comment(linker, "/export:NtSetTimer=ntdll.NtSetTimer")
#pragma comment(linker, "/export:NtSetTimerResolution=ntdll.NtSetTimerResolution")
#pragma comment(linker, "/export:NtSetValueKey=ntdll.NtSetValueKey")
#pragma comment(linker, "/export:NtSetVolumeInformationFile=ntdll.NtSetVolumeInformationFile")
#pragma comment(linker, "/export:NtShutdownSystem=ntdll.NtShutdownSystem")
#pragma comment(linker, "/export:NtSignalAndWaitForSingleObject=ntdll.NtSignalAndWaitForSingleObject")
#pragma comment(linker, "/export:NtStartProfile=ntdll.NtStartProfile")
#pragma comment(linker, "/export:NtStopProfile=ntdll.NtStopProfile")
#pragma comment(linker, "/export:NtSuspendThread=ntdll.NtSuspendThread")
#pragma comment(linker, "/export:NtSystemDebugControl=ntdll.NtSystemDebugControl")
#pragma comment(linker, "/export:NtTerminateProcess=ntdll.NtTerminateProcess")
#pragma comment(linker, "/export:NtTerminateThread=ntdll.NtTerminateThread")
#pragma comment(linker, "/export:NtTestAlert=ntdll.NtTestAlert")
#pragma comment(linker, "/export:NtUnloadDriver=ntdll.NtUnloadDriver")
#pragma comment(linker, "/export:NtUnloadKey=ntdll.NtUnloadKey")
#pragma comment(linker, "/export:NtUnlockFile=ntdll.NtUnlockFile")
#pragma comment(linker, "/export:NtUnlockVirtualMemory=ntdll.NtUnlockVirtualMemory")
#pragma comment(linker, "/export:NtUnmapViewOfSection=ntdll.NtUnmapViewOfSection")
#pragma comment(linker, "/export:NtVdmControl=ntdll.NtVdmControl")
#pragma comment(linker, "/export:NtWaitForMultipleObjects=ntdll.NtWaitForMultipleObjects")
#pragma comment(linker, "/export:NtWaitForSingleObject=ntdll.NtWaitForSingleObject")
#pragma comment(linker, "/export:NtWaitHighEventPair=ntdll.NtWaitHighEventPair")
#pragma comment(linker, "/export:NtWaitLowEventPair=ntdll.NtWaitLowEventPair")
#pragma comment(linker, "/export:NtWriteFile=ntdll.NtWriteFile")
#pragma comment(linker, "/export:NtWriteFileGather=ntdll.NtWriteFileGather")
#pragma comment(linker, "/export:NtWriteRequestData=ntdll.NtWriteRequestData")
#pragma comment(linker, "/export:NtWriteVirtualMemory=ntdll.NtWriteVirtualMemory")
#pragma comment(linker, "/export:NtYieldExecution=ntdll.NtYieldExecution")
#pragma comment(linker, "/export:PfxFindPrefix=ntdll.PfxFindPrefix")
#pragma comment(linker, "/export:PfxInitialize=ntdll.PfxInitialize")
#pragma comment(linker, "/export:PfxInsertPrefix=ntdll.PfxInsertPrefix")
#pragma comment(linker, "/export:PfxRemovePrefix=ntdll.PfxRemovePrefix")
#pragma comment(linker, "/export:PropertyLengthAsVariant=ntdll.PropertyLengthAsVariant")
#pragma comment(linker, "/export:RestoreEm87Context=ntdll.RestoreEm87Context")
#pragma comment(linker, "/export:RtlAbortRXact=ntdll.RtlAbortRXact")
#pragma comment(linker, "/export:RtlAbsoluteToSelfRelativeSD=ntdll.RtlAbsoluteToSelfRelativeSD")
#pragma comment(linker, "/export:RtlAcquirePebLock=ntdll.RtlAcquirePebLock")
#pragma comment(linker, "/export:RtlAcquireResourceExclusive=ntdll.RtlAcquireResourceExclusive")
#pragma comment(linker, "/export:RtlAcquireResourceShared=ntdll.RtlAcquireResourceShared")
#pragma comment(linker, "/export:RtlAddAccessAllowedAce=ntdll.RtlAddAccessAllowedAce")
#pragma comment(linker, "/export:RtlAddAccessDeniedAce=ntdll.RtlAddAccessDeniedAce")
#pragma comment(linker, "/export:RtlAddAce=ntdll.RtlAddAce")
#pragma comment(linker, "/export:RtlAddActionToRXact=ntdll.RtlAddActionToRXact")
#pragma comment(linker, "/export:RtlAddAtomToAtomTable=ntdll.RtlAddAtomToAtomTable")
#pragma comment(linker, "/export:RtlAddAttributeActionToRXact=ntdll.RtlAddAttributeActionToRXact")
#pragma comment(linker, "/export:RtlAddAuditAccessAce=ntdll.RtlAddAuditAccessAce")
#pragma comment(linker, "/export:RtlAddCompoundAce=ntdll.RtlAddCompoundAce")
#pragma comment(linker, "/export:RtlAdjustPrivilege=ntdll.RtlAdjustPrivilege")
#pragma comment(linker, "/export:RtlAllocateAndInitializeSid=ntdll.RtlAllocateAndInitializeSid")
#pragma comment(linker, "/export:RtlAllocateHandle=ntdll.RtlAllocateHandle")
#pragma comment(linker, "/export:RtlAllocateHeap=ntdll.RtlAllocateHeap")
#pragma comment(linker, "/export:RtlAnsiCharToUnicodeChar=ntdll.RtlAnsiCharToUnicodeChar")
#pragma comment(linker, "/export:RtlAnsiStringToUnicodeSize=ntdll.RtlAnsiStringToUnicodeSize")
#pragma comment(linker, "/export:RtlAnsiStringToUnicodeString=ntdll.RtlAnsiStringToUnicodeString")
#pragma comment(linker, "/export:RtlAppendAsciizToString=ntdll.RtlAppendAsciizToString")
#pragma comment(linker, "/export:RtlAppendStringToString=ntdll.RtlAppendStringToString")
#pragma comment(linker, "/export:RtlAppendUnicodeStringToString=ntdll.RtlAppendUnicodeStringToString")
#pragma comment(linker, "/export:RtlAppendUnicodeToString=ntdll.RtlAppendUnicodeToString")
#pragma comment(linker, "/export:RtlApplyRXact=ntdll.RtlApplyRXact")
#pragma comment(linker, "/export:RtlApplyRXactNoFlush=ntdll.RtlApplyRXactNoFlush")
#pragma comment(linker, "/export:RtlAreAllAccessesGranted=ntdll.RtlAreAllAccessesGranted")
#pragma comment(linker, "/export:RtlAreAnyAccessesGranted=ntdll.RtlAreAnyAccessesGranted")
#pragma comment(linker, "/export:RtlAreBitsClear=ntdll.RtlAreBitsClear")
#pragma comment(linker, "/export:RtlAreBitsSet=ntdll.RtlAreBitsSet")
#pragma comment(linker, "/export:RtlAssert=ntdll.RtlAssert")
#pragma comment(linker, "/export:RtlCaptureStackBackTrace=ntdll.RtlCaptureStackBackTrace")
#pragma comment(linker, "/export:RtlCharToInteger=ntdll.RtlCharToInteger")
#pragma comment(linker, "/export:RtlCheckRegistryKey=ntdll.RtlCheckRegistryKey")
#pragma comment(linker, "/export:RtlClearAllBits=ntdll.RtlClearAllBits")
#pragma comment(linker, "/export:RtlClearBits=ntdll.RtlClearBits")
#pragma comment(linker, "/export:RtlClosePropertySet=ntdll.RtlClosePropertySet")
#pragma comment(linker, "/export:RtlCompactHeap=ntdll.RtlCompactHeap")
#pragma comment(linker, "/export:RtlCompareMemory=ntdll.RtlCompareMemory")
#pragma comment(linker, "/export:RtlCompareMemoryUlong=ntdll.RtlCompareMemoryUlong")
#pragma comment(linker, "/export:RtlCompareString=ntdll.RtlCompareString")
#pragma comment(linker, "/export:RtlCompareUnicodeString=ntdll.RtlCompareUnicodeString")
#pragma comment(linker, "/export:RtlCompareVariants=ntdll.RtlCompareVariants")
#pragma comment(linker, "/export:RtlCompressBuffer=ntdll.RtlCompressBuffer")
#pragma comment(linker, "/export:RtlConsoleMultiByteToUnicodeN=ntdll.RtlConsoleMultiByteToUnicodeN")
#pragma comment(linker, "/export:RtlConvertExclusiveToShared=ntdll.RtlConvertExclusiveToShared")
#pragma comment(linker, "/export:RtlConvertLongToLargeInteger=ntdll.RtlConvertLongToLargeInteger")
#pragma comment(linker, "/export:RtlConvertPropertyToVariant=ntdll.RtlConvertPropertyToVariant")
#pragma comment(linker, "/export:RtlConvertSharedToExclusive=ntdll.RtlConvertSharedToExclusive")
#pragma comment(linker, "/export:RtlConvertSidToUnicodeString=ntdll.RtlConvertSidToUnicodeString")
#pragma comment(linker, "/export:RtlConvertUiListToApiList=ntdll.RtlConvertUiListToApiList")
#pragma comment(linker, "/export:RtlConvertUlongToLargeInteger=ntdll.RtlConvertUlongToLargeInteger")
#pragma comment(linker, "/export:RtlConvertVariantToProperty=ntdll.RtlConvertVariantToProperty")
#pragma comment(linker, "/export:RtlCopyLuid=ntdll.RtlCopyLuid")
#pragma comment(linker, "/export:RtlCopyLuidAndAttributesArray=ntdll.RtlCopyLuidAndAttributesArray")
#pragma comment(linker, "/export:RtlCopySecurityDescriptor=ntdll.RtlCopySecurityDescriptor")
#pragma comment(linker, "/export:RtlCopySid=ntdll.RtlCopySid")
#pragma comment(linker, "/export:RtlCopySidAndAttributesArray=ntdll.RtlCopySidAndAttributesArray")
#pragma comment(linker, "/export:RtlCopyString=ntdll.RtlCopyString")
#pragma comment(linker, "/export:RtlCopyUnicodeString=ntdll.RtlCopyUnicodeString")
#pragma comment(linker, "/export:RtlCreateAcl=ntdll.RtlCreateAcl")
#pragma comment(linker, "/export:RtlCreateAndSetSD=ntdll.RtlCreateAndSetSD")
#pragma comment(linker, "/export:RtlCreateAtomTable=ntdll.RtlCreateAtomTable")
#pragma comment(linker, "/export:RtlCreateEnvironment=ntdll.RtlCreateEnvironment")
#pragma comment(linker, "/export:RtlCreateHeap=ntdll.RtlCreateHeap")
#pragma comment(linker, "/export:RtlCreateProcessParameters=ntdll.RtlCreateProcessParameters")
#pragma comment(linker, "/export:RtlCreatePropertySet=ntdll.RtlCreatePropertySet")
#pragma comment(linker, "/export:RtlCreateQueryDebugBuffer=ntdll.RtlCreateQueryDebugBuffer")
#pragma comment(linker, "/export:RtlCreateRegistryKey=ntdll.RtlCreateRegistryKey")
#pragma comment(linker, "/export:RtlCreateSecurityDescriptor=ntdll.RtlCreateSecurityDescriptor")
#pragma comment(linker, "/export:RtlCreateTagHeap=ntdll.RtlCreateTagHeap")
#pragma comment(linker, "/export:RtlCreateUnicodeString=ntdll.RtlCreateUnicodeString")
#pragma comment(linker, "/export:RtlCreateUnicodeStringFromAsciiz=ntdll.RtlCreateUnicodeStringFromAsciiz")
#pragma comment(linker, "/export:RtlCreateUserProcess=ntdll.RtlCreateUserProcess")
#pragma comment(linker, "/export:RtlCreateUserSecurityObject=ntdll.RtlCreateUserSecurityObject")
#pragma comment(linker, "/export:RtlCreateUserThread=ntdll.RtlCreateUserThread")
#pragma comment(linker, "/export:RtlCustomCPToUnicodeN=ntdll.RtlCustomCPToUnicodeN")
#pragma comment(linker, "/export:RtlCutoverTimeToSystemTime=ntdll.RtlCutoverTimeToSystemTime")
#pragma comment(linker, "/export:RtlDeNormalizeProcessParams=ntdll.RtlDeNormalizeProcessParams")
#pragma comment(linker, "/export:RtlDecompressBuffer=ntdll.RtlDecompressBuffer")
#pragma comment(linker, "/export:RtlDecompressFragment=ntdll.RtlDecompressFragment")
#pragma comment(linker, "/export:RtlDelete=ntdll.RtlDelete")
#pragma comment(linker, "/export:RtlDeleteAce=ntdll.RtlDeleteAce")
#pragma comment(linker, "/export:RtlDeleteAtomFromAtomTable=ntdll.RtlDeleteAtomFromAtomTable")
#pragma comment(linker, "/export:RtlDeleteCriticalSection=ntdll.RtlDeleteCriticalSection")
#pragma comment(linker, "/export:RtlDeleteElementGenericTable=ntdll.RtlDeleteElementGenericTable")
#pragma comment(linker, "/export:RtlDeleteNoSplay=ntdll.RtlDeleteNoSplay")
#pragma comment(linker, "/export:RtlDeleteRegistryValue=ntdll.RtlDeleteRegistryValue")
#pragma comment(linker, "/export:RtlDeleteResource=ntdll.RtlDeleteResource")
#pragma comment(linker, "/export:RtlDeleteSecurityObject=ntdll.RtlDeleteSecurityObject")
#pragma comment(linker, "/export:RtlDestroyAtomTable=ntdll.RtlDestroyAtomTable")
#pragma comment(linker, "/export:RtlDestroyEnvironment=ntdll.RtlDestroyEnvironment")
#pragma comment(linker, "/export:RtlDestroyHandleTable=ntdll.RtlDestroyHandleTable")
#pragma comment(linker, "/export:RtlDestroyHeap=ntdll.RtlDestroyHeap")
#pragma comment(linker, "/export:RtlDestroyProcessParameters=ntdll.RtlDestroyProcessParameters")
#pragma comment(linker, "/export:RtlDestroyQueryDebugBuffer=ntdll.RtlDestroyQueryDebugBuffer")
#pragma comment(linker, "/export:RtlDetermineDosPathNameType_U=ntdll.RtlDetermineDosPathNameType_U")
#pragma comment(linker, "/export:RtlDoesFileExists_U=ntdll.RtlDoesFileExists_U")
#pragma comment(linker, "/export:RtlDosPathNameToNtPathName_U=ntdll.RtlDosPathNameToNtPathName_U")
#pragma comment(linker, "/export:RtlDosSearchPath_U=ntdll.RtlDosSearchPath_U")
#pragma comment(linker, "/export:RtlDowncaseUnicodeString=ntdll.RtlDowncaseUnicodeString")
#pragma comment(linker, "/export:RtlDumpResource=ntdll.RtlDumpResource")
#pragma comment(linker, "/export:RtlEmptyAtomTable=ntdll.RtlEmptyAtomTable")
#pragma comment(linker, "/export:RtlEnlargedIntegerMultiply=ntdll.RtlEnlargedIntegerMultiply")
#pragma comment(linker, "/export:RtlEnlargedUnsignedDivide=ntdll.RtlEnlargedUnsignedDivide")
#pragma comment(linker, "/export:RtlEnlargedUnsignedMultiply=ntdll.RtlEnlargedUnsignedMultiply")
#pragma comment(linker, "/export:RtlEnterCriticalSection=ntdll.RtlEnterCriticalSection")
#pragma comment(linker, "/export:RtlEnumProcessHeaps=ntdll.RtlEnumProcessHeaps")
#pragma comment(linker, "/export:RtlEnumerateGenericTable=ntdll.RtlEnumerateGenericTable")
#pragma comment(linker, "/export:RtlEnumerateGenericTableWithoutSplaying=ntdll.RtlEnumerateGenericTableWithoutSplaying")
#pragma comment(linker, "/export:RtlEnumerateProperties=ntdll.RtlEnumerateProperties")
#pragma comment(linker, "/export:RtlEqualComputerName=ntdll.RtlEqualComputerName")
#pragma comment(linker, "/export:RtlEqualDomainName=ntdll.RtlEqualDomainName")
#pragma comment(linker, "/export:RtlEqualLuid=ntdll.RtlEqualLuid")
#pragma comment(linker, "/export:RtlEqualPrefixSid=ntdll.RtlEqualPrefixSid")
#pragma comment(linker, "/export:RtlEqualSid=ntdll.RtlEqualSid")
#pragma comment(linker, "/export:RtlEqualString=ntdll.RtlEqualString")
#pragma comment(linker, "/export:RtlEqualUnicodeString=ntdll.RtlEqualUnicodeString")
#pragma comment(linker, "/export:RtlEraseUnicodeString=ntdll.RtlEraseUnicodeString")
#pragma comment(linker, "/export:RtlExpandEnvironmentStrings_U=ntdll.RtlExpandEnvironmentStrings_U")
#pragma comment(linker, "/export:RtlExtendHeap=ntdll.RtlExtendHeap")
#pragma comment(linker, "/export:RtlExtendedIntegerMultiply=ntdll.RtlExtendedIntegerMultiply")
#pragma comment(linker, "/export:RtlExtendedLargeIntegerDivide=ntdll.RtlExtendedLargeIntegerDivide")
#pragma comment(linker, "/export:RtlExtendedMagicDivide=ntdll.RtlExtendedMagicDivide")
#pragma comment(linker, "/export:RtlFillMemory=ntdll.RtlFillMemory")
#pragma comment(linker, "/export:RtlFillMemoryUlong=ntdll.RtlFillMemoryUlong")
#pragma comment(linker, "/export:RtlFindClearBits=ntdll.RtlFindClearBits")
#pragma comment(linker, "/export:RtlFindClearBitsAndSet=ntdll.RtlFindClearBitsAndSet")
#pragma comment(linker, "/export:RtlFindLongestRunClear=ntdll.RtlFindLongestRunClear")
#pragma comment(linker, "/export:RtlFindLongestRunSet=ntdll.RtlFindLongestRunSet")
#pragma comment(linker, "/export:RtlFindMessage=ntdll.RtlFindMessage")
#pragma comment(linker, "/export:RtlFindSetBits=ntdll.RtlFindSetBits")
#pragma comment(linker, "/export:RtlFindSetBitsAndClear=ntdll.RtlFindSetBitsAndClear")
#pragma comment(linker, "/export:RtlFirstFreeAce=ntdll.RtlFirstFreeAce")
#pragma comment(linker, "/export:RtlFlushPropertySet=ntdll.RtlFlushPropertySet")
#pragma comment(linker, "/export:RtlFormatCurrentUserKeyPath=ntdll.RtlFormatCurrentUserKeyPath")
#pragma comment(linker, "/export:RtlFormatMessage=ntdll.RtlFormatMessage")
#pragma comment(linker, "/export:RtlFreeAnsiString=ntdll.RtlFreeAnsiString")
#pragma comment(linker, "/export:RtlFreeHandle=ntdll.RtlFreeHandle")
#pragma comment(linker, "/export:RtlFreeHeap=ntdll.RtlFreeHeap")
#pragma comment(linker, "/export:RtlFreeOemString=ntdll.RtlFreeOemString")
#pragma comment(linker, "/export:RtlFreeSid=ntdll.RtlFreeSid")
#pragma comment(linker, "/export:RtlFreeUnicodeString=ntdll.RtlFreeUnicodeString")
#pragma comment(linker, "/export:RtlFreeUserThreadStack=ntdll.RtlFreeUserThreadStack")
#pragma comment(linker, "/export:RtlGenerate8dot3Name=ntdll.RtlGenerate8dot3Name")
#pragma comment(linker, "/export:RtlGetAce=ntdll.RtlGetAce")
#pragma comment(linker, "/export:RtlGetCallersAddress=ntdll.RtlGetCallersAddress")
#pragma comment(linker, "/export:RtlGetCompressionWorkSpaceSize=ntdll.RtlGetCompressionWorkSpaceSize")
#pragma comment(linker, "/export:RtlGetControlSecurityDescriptor=ntdll.RtlGetControlSecurityDescriptor")
#pragma comment(linker, "/export:RtlGetCurrentDirectory_U=ntdll.RtlGetCurrentDirectory_U")
#pragma comment(linker, "/export:RtlGetDaclSecurityDescriptor=ntdll.RtlGetDaclSecurityDescriptor")
#pragma comment(linker, "/export:RtlGetElementGenericTable=ntdll.RtlGetElementGenericTable")
#pragma comment(linker, "/export:RtlGetFullPathName_U=ntdll.RtlGetFullPathName_U")
#pragma comment(linker, "/export:RtlGetGroupSecurityDescriptor=ntdll.RtlGetGroupSecurityDescriptor")
#pragma comment(linker, "/export:RtlGetLongestNtPathLength=ntdll.RtlGetLongestNtPathLength")
#pragma comment(linker, "/export:RtlGetNtGlobalFlags=ntdll.RtlGetNtGlobalFlags")
#pragma comment(linker, "/export:RtlGetNtProductType=ntdll.RtlGetNtProductType")
#pragma comment(linker, "/export:RtlGetOwnerSecurityDescriptor=ntdll.RtlGetOwnerSecurityDescriptor")
#pragma comment(linker, "/export:RtlGetProcessHeaps=ntdll.RtlGetProcessHeaps")
#pragma comment(linker, "/export:RtlGetSaclSecurityDescriptor=ntdll.RtlGetSaclSecurityDescriptor")
#pragma comment(linker, "/export:RtlGetUserInfoHeap=ntdll.RtlGetUserInfoHeap")
#pragma comment(linker, "/export:RtlGuidToPropertySetName=ntdll.RtlGuidToPropertySetName")
#pragma comment(linker, "/export:RtlIdentifierAuthoritySid=ntdll.RtlIdentifierAuthoritySid")
#pragma comment(linker, "/export:RtlImageDirectoryEntryToData=ntdll.RtlImageDirectoryEntryToData")
#pragma comment(linker, "/export:RtlImageNtHeader=ntdll.RtlImageNtHeader")
#pragma comment(linker, "/export:RtlImageRvaToSection=ntdll.RtlImageRvaToSection")
#pragma comment(linker, "/export:RtlImageRvaToVa=ntdll.RtlImageRvaToVa")
#pragma comment(linker, "/export:RtlImpersonateSelf=ntdll.RtlImpersonateSelf")
#pragma comment(linker, "/export:RtlInitAnsiString=ntdll.RtlInitAnsiString")
#pragma comment(linker, "/export:RtlInitCodePageTable=ntdll.RtlInitCodePageTable")
#pragma comment(linker, "/export:RtlInitNlsTables=ntdll.RtlInitNlsTables")
#pragma comment(linker, "/export:RtlInitString=ntdll.RtlInitString")
#pragma comment(linker, "/export:RtlInitUnicodeString=ntdll.RtlInitUnicodeString")
#pragma comment(linker, "/export:RtlInitializeAtomPackage=ntdll.RtlInitializeAtomPackage")
#pragma comment(linker, "/export:RtlInitializeBitMap=ntdll.RtlInitializeBitMap")
#pragma comment(linker, "/export:RtlInitializeContext=ntdll.RtlInitializeContext")
#pragma comment(linker, "/export:RtlInitializeCriticalSection=ntdll.RtlInitializeCriticalSection")
#pragma comment(linker, "/export:RtlInitializeCriticalSectionAndSpinCount=ntdll.RtlInitializeCriticalSectionAndSpinCount")
#pragma comment(linker, "/export:RtlInitializeGenericTable=ntdll.RtlInitializeGenericTable")
#pragma comment(linker, "/export:RtlInitializeHandleTable=ntdll.RtlInitializeHandleTable")
#pragma comment(linker, "/export:RtlInitializeRXact=ntdll.RtlInitializeRXact")
#pragma comment(linker, "/export:RtlInitializeResource=ntdll.RtlInitializeResource")
#pragma comment(linker, "/export:RtlInitializeSid=ntdll.RtlInitializeSid")
#pragma comment(linker, "/export:RtlInsertElementGenericTable=ntdll.RtlInsertElementGenericTable")
#pragma comment(linker, "/export:RtlIntegerToChar=ntdll.RtlIntegerToChar")
#pragma comment(linker, "/export:RtlIntegerToUnicodeString=ntdll.RtlIntegerToUnicodeString")
#pragma comment(linker, "/export:RtlIsDosDeviceName_U=ntdll.RtlIsDosDeviceName_U")
#pragma comment(linker, "/export:RtlIsGenericTableEmpty=ntdll.RtlIsGenericTableEmpty")
#pragma comment(linker, "/export:RtlIsNameLegalDOS8Dot3=ntdll.RtlIsNameLegalDOS8Dot3")
#pragma comment(linker, "/export:RtlIsTextUnicode=ntdll.RtlIsTextUnicode")
#pragma comment(linker, "/export:RtlIsValidHandle=ntdll.RtlIsValidHandle")
#pragma comment(linker, "/export:RtlIsValidIndexHandle=ntdll.RtlIsValidIndexHandle")
#pragma comment(linker, "/export:RtlLargeIntegerAdd=ntdll.RtlLargeIntegerAdd")
#pragma comment(linker, "/export:RtlLargeIntegerArithmeticShift=ntdll.RtlLargeIntegerArithmeticShift")
#pragma comment(linker, "/export:RtlLargeIntegerDivide=ntdll.RtlLargeIntegerDivide")
#pragma comment(linker, "/export:RtlLargeIntegerNegate=ntdll.RtlLargeIntegerNegate")
#pragma comment(linker, "/export:RtlLargeIntegerShiftLeft=ntdll.RtlLargeIntegerShiftLeft")
#pragma comment(linker, "/export:RtlLargeIntegerShiftRight=ntdll.RtlLargeIntegerShiftRight")
#pragma comment(linker, "/export:RtlLargeIntegerSubtract=ntdll.RtlLargeIntegerSubtract")
#pragma comment(linker, "/export:RtlLargeIntegerToChar=ntdll.RtlLargeIntegerToChar")
#pragma comment(linker, "/export:RtlLeaveCriticalSection=ntdll.RtlLeaveCriticalSection")
#pragma comment(linker, "/export:RtlLengthRequiredSid=ntdll.RtlLengthRequiredSid")
#pragma comment(linker, "/export:RtlLengthSecurityDescriptor=ntdll.RtlLengthSecurityDescriptor")
#pragma comment(linker, "/export:RtlLengthSid=ntdll.RtlLengthSid")
#pragma comment(linker, "/export:RtlLocalTimeToSystemTime=ntdll.RtlLocalTimeToSystemTime")
#pragma comment(linker, "/export:RtlLockHeap=ntdll.RtlLockHeap")
#pragma comment(linker, "/export:RtlLookupAtomInAtomTable=ntdll.RtlLookupAtomInAtomTable")
#pragma comment(linker, "/export:RtlLookupElementGenericTable=ntdll.RtlLookupElementGenericTable")
#pragma comment(linker, "/export:RtlMakeSelfRelativeSD=ntdll.RtlMakeSelfRelativeSD")
#pragma comment(linker, "/export:RtlMapGenericMask=ntdll.RtlMapGenericMask")
#pragma comment(linker, "/export:RtlMoveMemory=ntdll.RtlMoveMemory")
#pragma comment(linker, "/export:RtlMultiByteToUnicodeN=ntdll.RtlMultiByteToUnicodeN")
#pragma comment(linker, "/export:RtlMultiByteToUnicodeSize=ntdll.RtlMultiByteToUnicodeSize")
#pragma comment(linker, "/export:RtlNewInstanceSecurityObject=ntdll.RtlNewInstanceSecurityObject")
#pragma comment(linker, "/export:RtlNewSecurityGrantedAccess=ntdll.RtlNewSecurityGrantedAccess")
#pragma comment(linker, "/export:RtlNewSecurityObject=ntdll.RtlNewSecurityObject")
#pragma comment(linker, "/export:RtlNormalizeProcessParams=ntdll.RtlNormalizeProcessParams")
#pragma comment(linker, "/export:RtlNtStatusToDosError=ntdll.RtlNtStatusToDosError")
#pragma comment(linker, "/export:RtlNumberGenericTableElements=ntdll.RtlNumberGenericTableElements")
#pragma comment(linker, "/export:RtlNumberOfClearBits=ntdll.RtlNumberOfClearBits")
#pragma comment(linker, "/export:RtlNumberOfSetBits=ntdll.RtlNumberOfSetBits")
#pragma comment(linker, "/export:RtlOemStringToUnicodeSize=ntdll.RtlOemStringToUnicodeSize")
#pragma comment(linker, "/export:RtlOemStringToUnicodeString=ntdll.RtlOemStringToUnicodeString")
#pragma comment(linker, "/export:RtlOemToUnicodeN=ntdll.RtlOemToUnicodeN")
#pragma comment(linker, "/export:RtlOnMappedStreamEvent=ntdll.RtlOnMappedStreamEvent")
#pragma comment(linker, "/export:RtlOpenCurrentUser=ntdll.RtlOpenCurrentUser")
#pragma comment(linker, "/export:RtlPcToFileHeader=ntdll.RtlPcToFileHeader")
#pragma comment(linker, "/export:RtlPinAtomInAtomTable=ntdll.RtlPinAtomInAtomTable")
#pragma comment(linker, "/export:RtlPrefixString=ntdll.RtlPrefixString")
#pragma comment(linker, "/export:RtlPrefixUnicodeString=ntdll.RtlPrefixUnicodeString")
#pragma comment(linker, "/export:RtlPropertySetNameToGuid=ntdll.RtlPropertySetNameToGuid")
#pragma comment(linker, "/export:RtlProtectHeap=ntdll.RtlProtectHeap")
#pragma comment(linker, "/export:RtlQueryAtomInAtomTable=ntdll.RtlQueryAtomInAtomTable")
#pragma comment(linker, "/export:RtlQueryEnvironmentVariable_U=ntdll.RtlQueryEnvironmentVariable_U")
#pragma comment(linker, "/export:RtlQueryInformationAcl=ntdll.RtlQueryInformationAcl")
#pragma comment(linker, "/export:RtlQueryProcessBackTraceInformation=ntdll.RtlQueryProcessBackTraceInformation")
#pragma comment(linker, "/export:RtlQueryProcessDebugInformation=ntdll.RtlQueryProcessDebugInformation")
#pragma comment(linker, "/export:RtlQueryProcessHeapInformation=ntdll.RtlQueryProcessHeapInformation")
#pragma comment(linker, "/export:RtlQueryProcessLockInformation=ntdll.RtlQueryProcessLockInformation")
#pragma comment(linker, "/export:RtlQueryProperties=ntdll.RtlQueryProperties")
#pragma comment(linker, "/export:RtlQueryPropertyNames=ntdll.RtlQueryPropertyNames")
#pragma comment(linker, "/export:RtlQueryPropertySet=ntdll.RtlQueryPropertySet")
#pragma comment(linker, "/export:RtlQueryRegistryValues=ntdll.RtlQueryRegistryValues")
#pragma comment(linker, "/export:RtlQuerySecurityObject=ntdll.RtlQuerySecurityObject")
#pragma comment(linker, "/export:RtlQueryTagHeap=ntdll.RtlQueryTagHeap")
#pragma comment(linker, "/export:RtlQueryTimeZoneInformation=ntdll.RtlQueryTimeZoneInformation")
#pragma comment(linker, "/export:RtlRaiseException=ntdll.RtlRaiseException")
#pragma comment(linker, "/export:RtlRaiseStatus=ntdll.RtlRaiseStatus")
#pragma comment(linker, "/export:RtlRandom=ntdll.RtlRandom")
#pragma comment(linker, "/export:RtlReAllocateHeap=ntdll.RtlReAllocateHeap")
#pragma comment(linker, "/export:RtlRealPredecessor=ntdll.RtlRealPredecessor")
#pragma comment(linker, "/export:RtlRealSuccessor=ntdll.RtlRealSuccessor")
#pragma comment(linker, "/export:RtlReleasePebLock=ntdll.RtlReleasePebLock")
#pragma comment(linker, "/export:RtlReleaseResource=ntdll.RtlReleaseResource")
#pragma comment(linker, "/export:RtlRemoteCall=ntdll.RtlRemoteCall")
#pragma comment(linker, "/export:RtlResetRtlTranslations=ntdll.RtlResetRtlTranslations")
#pragma comment(linker, "/export:RtlRunDecodeUnicodeString=ntdll.RtlRunDecodeUnicodeString")
#pragma comment(linker, "/export:RtlRunEncodeUnicodeString=ntdll.RtlRunEncodeUnicodeString")
#pragma comment(linker, "/export:RtlSecondsSince1970ToTime=ntdll.RtlSecondsSince1970ToTime")
#pragma comment(linker, "/export:RtlSecondsSince1980ToTime=ntdll.RtlSecondsSince1980ToTime")
#pragma comment(linker, "/export:RtlSelfRelativeToAbsoluteSD=ntdll.RtlSelfRelativeToAbsoluteSD")
#pragma comment(linker, "/export:RtlSetAllBits=ntdll.RtlSetAllBits")
#pragma comment(linker, "/export:RtlSetAttributesSecurityDescriptor=ntdll.RtlSetAttributesSecurityDescriptor")
#pragma comment(linker, "/export:RtlSetBits=ntdll.RtlSetBits")
#pragma comment(linker, "/export:RtlSetCriticalSectionSpinCount=ntdll.RtlSetCriticalSectionSpinCount")
#pragma comment(linker, "/export:RtlSetCurrentDirectory_U=ntdll.RtlSetCurrentDirectory_U")
#pragma comment(linker, "/export:RtlSetCurrentEnvironment=ntdll.RtlSetCurrentEnvironment")
#pragma comment(linker, "/export:RtlSetDaclSecurityDescriptor=ntdll.RtlSetDaclSecurityDescriptor")
#pragma comment(linker, "/export:RtlSetEnvironmentVariable=ntdll.RtlSetEnvironmentVariable")
#pragma comment(linker, "/export:RtlSetGroupSecurityDescriptor=ntdll.RtlSetGroupSecurityDescriptor")
#pragma comment(linker, "/export:RtlSetInformationAcl=ntdll.RtlSetInformationAcl")
#pragma comment(linker, "/export:RtlSetOwnerSecurityDescriptor=ntdll.RtlSetOwnerSecurityDescriptor")
#pragma comment(linker, "/export:RtlSetProperties=ntdll.RtlSetProperties")
#pragma comment(linker, "/export:RtlSetPropertyNames=ntdll.RtlSetPropertyNames")
#pragma comment(linker, "/export:RtlSetPropertySetClassId=ntdll.RtlSetPropertySetClassId")
#pragma comment(linker, "/export:RtlSetSaclSecurityDescriptor=ntdll.RtlSetSaclSecurityDescriptor")
#pragma comment(linker, "/export:RtlSetSecurityObject=ntdll.RtlSetSecurityObject")
#pragma comment(linker, "/export:RtlSetTimeZoneInformation=ntdll.RtlSetTimeZoneInformation")
#pragma comment(linker, "/export:RtlSetUnicodeCallouts=ntdll.RtlSetUnicodeCallouts")
#pragma comment(linker, "/export:RtlSetUserFlagsHeap=ntdll.RtlSetUserFlagsHeap")
#pragma comment(linker, "/export:RtlSetUserValueHeap=ntdll.RtlSetUserValueHeap")
#pragma comment(linker, "/export:RtlSizeHeap=ntdll.RtlSizeHeap")
#pragma comment(linker, "/export:RtlSplay=ntdll.RtlSplay")
#pragma comment(linker, "/export:RtlStartRXact=ntdll.RtlStartRXact")
#pragma comment(linker, "/export:RtlSubAuthorityCountSid=ntdll.RtlSubAuthorityCountSid")
#pragma comment(linker, "/export:RtlSubAuthoritySid=ntdll.RtlSubAuthoritySid")
#pragma comment(linker, "/export:RtlSubtreePredecessor=ntdll.RtlSubtreePredecessor")
#pragma comment(linker, "/export:RtlSubtreeSuccessor=ntdll.RtlSubtreeSuccessor")
#pragma comment(linker, "/export:RtlSystemTimeToLocalTime=ntdll.RtlSystemTimeToLocalTime")
#pragma comment(linker, "/export:RtlTimeFieldsToTime=ntdll.RtlTimeFieldsToTime")
#pragma comment(linker, "/export:RtlTimeToElapsedTimeFields=ntdll.RtlTimeToElapsedTimeFields")
#pragma comment(linker, "/export:RtlTimeToSecondsSince1970=ntdll.RtlTimeToSecondsSince1970")
#pragma comment(linker, "/export:RtlTimeToSecondsSince1980=ntdll.RtlTimeToSecondsSince1980")
#pragma comment(linker, "/export:RtlTimeToTimeFields=ntdll.RtlTimeToTimeFields")
#pragma comment(linker, "/export:RtlTryEnterCriticalSection=ntdll.RtlTryEnterCriticalSection")
#pragma comment(linker, "/export:RtlUnicodeStringToAnsiSize=ntdll.RtlUnicodeStringToAnsiSize")
#pragma comment(linker, "/export:RtlUnicodeStringToAnsiString=ntdll.RtlUnicodeStringToAnsiString")
#pragma comment(linker, "/export:RtlUnicodeStringToCountedOemString=ntdll.RtlUnicodeStringToCountedOemString")
#pragma comment(linker, "/export:RtlUnicodeStringToInteger=ntdll.RtlUnicodeStringToInteger")
#pragma comment(linker, "/export:RtlUnicodeStringToOemSize=ntdll.RtlUnicodeStringToOemSize")
#pragma comment(linker, "/export:RtlUnicodeStringToOemString=ntdll.RtlUnicodeStringToOemString")
#pragma comment(linker, "/export:RtlUnicodeToCustomCPN=ntdll.RtlUnicodeToCustomCPN")
#pragma comment(linker, "/export:RtlUnicodeToMultiByteN=ntdll.RtlUnicodeToMultiByteN")
#pragma comment(linker, "/export:RtlUnicodeToMultiByteSize=ntdll.RtlUnicodeToMultiByteSize")
#pragma comment(linker, "/export:RtlUnicodeToOemN=ntdll.RtlUnicodeToOemN")
#pragma comment(linker, "/export:RtlUniform=ntdll.RtlUniform")
#pragma comment(linker, "/export:RtlUnlockHeap=ntdll.RtlUnlockHeap")
#pragma comment(linker, "/export:RtlUnwind=ntdll.RtlUnwind")
#pragma comment(linker, "/export:RtlUpcaseUnicodeChar=ntdll.RtlUpcaseUnicodeChar")
#pragma comment(linker, "/export:RtlUpcaseUnicodeString=ntdll.RtlUpcaseUnicodeString")
#pragma comment(linker, "/export:RtlUpcaseUnicodeStringToAnsiString=ntdll.RtlUpcaseUnicodeStringToAnsiString")
#pragma comment(linker, "/export:RtlUpcaseUnicodeStringToCountedOemString=ntdll.RtlUpcaseUnicodeStringToCountedOemString")
#pragma comment(linker, "/export:RtlUpcaseUnicodeStringToOemString=ntdll.RtlUpcaseUnicodeStringToOemString")
#pragma comment(linker, "/export:RtlUpcaseUnicodeToCustomCPN=ntdll.RtlUpcaseUnicodeToCustomCPN")
#pragma comment(linker, "/export:RtlUpcaseUnicodeToMultiByteN=ntdll.RtlUpcaseUnicodeToMultiByteN")
#pragma comment(linker, "/export:RtlUpcaseUnicodeToOemN=ntdll.RtlUpcaseUnicodeToOemN")
#pragma comment(linker, "/export:RtlUpperChar=ntdll.RtlUpperChar")
#pragma comment(linker, "/export:RtlUpperString=ntdll.RtlUpperString")
#pragma comment(linker, "/export:RtlUsageHeap=ntdll.RtlUsageHeap")
#pragma comment(linker, "/export:RtlValidAcl=ntdll.RtlValidAcl")
#pragma comment(linker, "/export:RtlValidSecurityDescriptor=ntdll.RtlValidSecurityDescriptor")
#pragma comment(linker, "/export:RtlValidSid=ntdll.RtlValidSid")
#pragma comment(linker, "/export:RtlValidateHeap=ntdll.RtlValidateHeap")
#pragma comment(linker, "/export:RtlValidateProcessHeaps=ntdll.RtlValidateProcessHeaps")
#pragma comment(linker, "/export:RtlWalkHeap=ntdll.RtlWalkHeap")
#pragma comment(linker, "/export:RtlWriteRegistryValue=ntdll.RtlWriteRegistryValue")
#pragma comment(linker, "/export:RtlZeroHeap=ntdll.RtlZeroHeap")
#pragma comment(linker, "/export:RtlZeroMemory=ntdll.RtlZeroMemory")
#pragma comment(linker, "/export:RtlpNtCreateKey=ntdll.RtlpNtCreateKey")
#pragma comment(linker, "/export:RtlpNtEnumerateSubKey=ntdll.RtlpNtEnumerateSubKey")
#pragma comment(linker, "/export:RtlpNtMakeTemporaryKey=ntdll.RtlpNtMakeTemporaryKey")
#pragma comment(linker, "/export:RtlpNtOpenKey=ntdll.RtlpNtOpenKey")
#pragma comment(linker, "/export:RtlpNtQueryValueKey=ntdll.RtlpNtQueryValueKey")
#pragma comment(linker, "/export:RtlpNtSetValueKey=ntdll.RtlpNtSetValueKey")
#pragma comment(linker, "/export:RtlpUnWaitCriticalSection=ntdll.RtlpUnWaitCriticalSection")
#pragma comment(linker, "/export:RtlpWaitForCriticalSection=ntdll.RtlpWaitForCriticalSection")
#pragma comment(linker, "/export:RtlxAnsiStringToUnicodeSize=ntdll.RtlxAnsiStringToUnicodeSize")
#pragma comment(linker, "/export:RtlxOemStringToUnicodeSize=ntdll.RtlxOemStringToUnicodeSize")
#pragma comment(linker, "/export:RtlxUnicodeStringToAnsiSize=ntdll.RtlxUnicodeStringToAnsiSize")
#pragma comment(linker, "/export:RtlxUnicodeStringToOemSize=ntdll.RtlxUnicodeStringToOemSize")
#pragma comment(linker, "/export:SaveEm87Context=ntdll.SaveEm87Context")
#pragma comment(linker, "/export:ZwAcceptConnectPort=ntdll.ZwAcceptConnectPort")
#pragma comment(linker, "/export:ZwAccessCheck=ntdll.ZwAccessCheck")
#pragma comment(linker, "/export:ZwAccessCheckAndAuditAlarm=ntdll.ZwAccessCheckAndAuditAlarm")
#pragma comment(linker, "/export:ZwAddAtom=ntdll.ZwAddAtom")
#pragma comment(linker, "/export:ZwAdjustGroupsToken=ntdll.ZwAdjustGroupsToken")
#pragma comment(linker, "/export:ZwAdjustPrivilegesToken=ntdll.ZwAdjustPrivilegesToken")
#pragma comment(linker, "/export:ZwAlertResumeThread=ntdll.ZwAlertResumeThread")
#pragma comment(linker, "/export:ZwAlertThread=ntdll.ZwAlertThread")
#pragma comment(linker, "/export:ZwAllocateLocallyUniqueId=ntdll.ZwAllocateLocallyUniqueId")
#pragma comment(linker, "/export:ZwAllocateUuids=ntdll.ZwAllocateUuids")
#pragma comment(linker, "/export:ZwAllocateVirtualMemory=ntdll.ZwAllocateVirtualMemory")
#pragma comment(linker, "/export:ZwCallbackReturn=ntdll.ZwCallbackReturn")
#pragma comment(linker, "/export:ZwCancelIoFile=ntdll.ZwCancelIoFile")
#pragma comment(linker, "/export:ZwCancelTimer=ntdll.ZwCancelTimer")
#pragma comment(linker, "/export:ZwClearEvent=ntdll.ZwClearEvent")
#pragma comment(linker, "/export:ZwClose=ntdll.ZwClose")
#pragma comment(linker, "/export:ZwCloseObjectAuditAlarm=ntdll.ZwCloseObjectAuditAlarm")
#pragma comment(linker, "/export:ZwCompleteConnectPort=ntdll.ZwCompleteConnectPort")
#pragma comment(linker, "/export:ZwConnectPort=ntdll.ZwConnectPort")
#pragma comment(linker, "/export:ZwContinue=ntdll.ZwContinue")
#pragma comment(linker, "/export:ZwCreateChannel=ntdll.ZwCreateChannel")
#pragma comment(linker, "/export:ZwCreateDirectoryObject=ntdll.ZwCreateDirectoryObject")
#pragma comment(linker, "/export:ZwCreateEvent=ntdll.ZwCreateEvent")
#pragma comment(linker, "/export:ZwCreateEventPair=ntdll.ZwCreateEventPair")
#pragma comment(linker, "/export:ZwCreateFile=ntdll.ZwCreateFile")
#pragma comment(linker, "/export:ZwCreateIoCompletion=ntdll.ZwCreateIoCompletion")
#pragma comment(linker, "/export:ZwCreateKey=ntdll.ZwCreateKey")
#pragma comment(linker, "/export:ZwCreateMailslotFile=ntdll.ZwCreateMailslotFile")
#pragma comment(linker, "/export:ZwCreateMutant=ntdll.ZwCreateMutant")
#pragma comment(linker, "/export:ZwCreateNamedPipeFile=ntdll.ZwCreateNamedPipeFile")
#pragma comment(linker, "/export:ZwCreatePagingFile=ntdll.ZwCreatePagingFile")
#pragma comment(linker, "/export:ZwCreatePort=ntdll.ZwCreatePort")
#pragma comment(linker, "/export:ZwCreateProcess=ntdll.ZwCreateProcess")
#pragma comment(linker, "/export:ZwCreateProfile=ntdll.ZwCreateProfile")
#pragma comment(linker, "/export:ZwCreateSection=ntdll.ZwCreateSection")
#pragma comment(linker, "/export:ZwCreateSemaphore=ntdll.ZwCreateSemaphore")
#pragma comment(linker, "/export:ZwCreateSymbolicLinkObject=ntdll.ZwCreateSymbolicLinkObject")
#pragma comment(linker, "/export:ZwCreateThread=ntdll.ZwCreateThread")
#pragma comment(linker, "/export:ZwCreateTimer=ntdll.ZwCreateTimer")
#pragma comment(linker, "/export:ZwCreateToken=ntdll.ZwCreateToken")
#pragma comment(linker, "/export:ZwDelayExecution=ntdll.ZwDelayExecution")
#pragma comment(linker, "/export:ZwDeleteAtom=ntdll.ZwDeleteAtom")
#pragma comment(linker, "/export:ZwDeleteFile=ntdll.ZwDeleteFile")
#pragma comment(linker, "/export:ZwDeleteKey=ntdll.ZwDeleteKey")
#pragma comment(linker, "/export:ZwDeleteObjectAuditAlarm=ntdll.ZwDeleteObjectAuditAlarm")
#pragma comment(linker, "/export:ZwDeleteValueKey=ntdll.ZwDeleteValueKey")
#pragma comment(linker, "/export:ZwDeviceIoControlFile=ntdll.ZwDeviceIoControlFile")
#pragma comment(linker, "/export:ZwDisplayString=ntdll.ZwDisplayString")
#pragma comment(linker, "/export:ZwDuplicateObject=ntdll.ZwDuplicateObject")
#pragma comment(linker, "/export:ZwDuplicateToken=ntdll.ZwDuplicateToken")
#pragma comment(linker, "/export:ZwEnumerateKey=ntdll.ZwEnumerateKey")
#pragma comment(linker, "/export:ZwEnumerateValueKey=ntdll.ZwEnumerateValueKey")
#pragma comment(linker, "/export:ZwExtendSection=ntdll.ZwExtendSection")
#pragma comment(linker, "/export:ZwFindAtom=ntdll.ZwFindAtom")
#pragma comment(linker, "/export:ZwFlushBuffersFile=ntdll.ZwFlushBuffersFile")
#pragma comment(linker, "/export:ZwFlushInstructionCache=ntdll.ZwFlushInstructionCache")
#pragma comment(linker, "/export:ZwFlushKey=ntdll.ZwFlushKey")
#pragma comment(linker, "/export:ZwFlushVirtualMemory=ntdll.ZwFlushVirtualMemory")
#pragma comment(linker, "/export:ZwFlushWriteBuffer=ntdll.ZwFlushWriteBuffer")
#pragma comment(linker, "/export:ZwFreeVirtualMemory=ntdll.ZwFreeVirtualMemory")
#pragma comment(linker, "/export:ZwFsControlFile=ntdll.ZwFsControlFile")
#pragma comment(linker, "/export:ZwGetContextThread=ntdll.ZwGetContextThread")
#pragma comment(linker, "/export:ZwGetPlugPlayEvent=ntdll.ZwGetPlugPlayEvent")
#pragma comment(linker, "/export:ZwGetTickCount=ntdll.ZwGetTickCount")
#pragma comment(linker, "/export:ZwImpersonateClientOfPort=ntdll.ZwImpersonateClientOfPort")
#pragma comment(linker, "/export:ZwImpersonateThread=ntdll.ZwImpersonateThread")
#pragma comment(linker, "/export:ZwInitializeRegistry=ntdll.ZwInitializeRegistry")
#pragma comment(linker, "/export:ZwListenChannel=ntdll.ZwListenChannel")
#pragma comment(linker, "/export:ZwListenPort=ntdll.ZwListenPort")
#pragma comment(linker, "/export:ZwLoadDriver=ntdll.ZwLoadDriver")
#pragma comment(linker, "/export:ZwLoadKey=ntdll.ZwLoadKey")
#pragma comment(linker, "/export:ZwLoadKey2=ntdll.ZwLoadKey2")
#pragma comment(linker, "/export:ZwLockFile=ntdll.ZwLockFile")
#pragma comment(linker, "/export:ZwLockVirtualMemory=ntdll.ZwLockVirtualMemory")
#pragma comment(linker, "/export:ZwMakeTemporaryObject=ntdll.ZwMakeTemporaryObject")
#pragma comment(linker, "/export:ZwMapViewOfSection=ntdll.ZwMapViewOfSection")
#pragma comment(linker, "/export:ZwNotifyChangeDirectoryFile=ntdll.ZwNotifyChangeDirectoryFile")
#pragma comment(linker, "/export:ZwNotifyChangeKey=ntdll.ZwNotifyChangeKey")
#pragma comment(linker, "/export:ZwOpenChannel=ntdll.ZwOpenChannel")
#pragma comment(linker, "/export:ZwOpenDirectoryObject=ntdll.ZwOpenDirectoryObject")
#pragma comment(linker, "/export:ZwOpenEvent=ntdll.ZwOpenEvent")
#pragma comment(linker, "/export:ZwOpenEventPair=ntdll.ZwOpenEventPair")
#pragma comment(linker, "/export:ZwOpenFile=ntdll.ZwOpenFile")
#pragma comment(linker, "/export:ZwOpenIoCompletion=ntdll.ZwOpenIoCompletion")
#pragma comment(linker, "/export:ZwOpenKey=ntdll.ZwOpenKey")
#pragma comment(linker, "/export:ZwOpenMutant=ntdll.ZwOpenMutant")
#pragma comment(linker, "/export:ZwOpenObjectAuditAlarm=ntdll.ZwOpenObjectAuditAlarm")
#pragma comment(linker, "/export:ZwOpenProcess=ntdll.ZwOpenProcess")
#pragma comment(linker, "/export:ZwOpenProcessToken=ntdll.ZwOpenProcessToken")
#pragma comment(linker, "/export:ZwOpenSection=ntdll.ZwOpenSection")
#pragma comment(linker, "/export:ZwOpenSemaphore=ntdll.ZwOpenSemaphore")
#pragma comment(linker, "/export:ZwOpenSymbolicLinkObject=ntdll.ZwOpenSymbolicLinkObject")
#pragma comment(linker, "/export:ZwOpenThread=ntdll.ZwOpenThread")
#pragma comment(linker, "/export:ZwOpenThreadToken=ntdll.ZwOpenThreadToken")
#pragma comment(linker, "/export:ZwOpenTimer=ntdll.ZwOpenTimer")
#pragma comment(linker, "/export:ZwPlugPlayControl=ntdll.ZwPlugPlayControl")
#pragma comment(linker, "/export:ZwPrivilegeCheck=ntdll.ZwPrivilegeCheck")
#pragma comment(linker, "/export:ZwPrivilegeObjectAuditAlarm=ntdll.ZwPrivilegeObjectAuditAlarm")
#pragma comment(linker, "/export:ZwPrivilegedServiceAuditAlarm=ntdll.ZwPrivilegedServiceAuditAlarm")
#pragma comment(linker, "/export:ZwProtectVirtualMemory=ntdll.ZwProtectVirtualMemory")
#pragma comment(linker, "/export:ZwPulseEvent=ntdll.ZwPulseEvent")
#pragma comment(linker, "/export:ZwQueryAttributesFile=ntdll.ZwQueryAttributesFile")
#pragma comment(linker, "/export:ZwQueryDefaultLocale=ntdll.ZwQueryDefaultLocale")
#pragma comment(linker, "/export:ZwQueryDirectoryFile=ntdll.ZwQueryDirectoryFile")
#pragma comment(linker, "/export:ZwQueryDirectoryObject=ntdll.ZwQueryDirectoryObject")
#pragma comment(linker, "/export:ZwQueryEaFile=ntdll.ZwQueryEaFile")
#pragma comment(linker, "/export:ZwQueryEvent=ntdll.ZwQueryEvent")
#pragma comment(linker, "/export:ZwQueryFullAttributesFile=ntdll.ZwQueryFullAttributesFile")
#pragma comment(linker, "/export:ZwQueryInformationAtom=ntdll.ZwQueryInformationAtom")
#pragma comment(linker, "/export:ZwQueryInformationFile=ntdll.ZwQueryInformationFile")
#pragma comment(linker, "/export:ZwQueryInformationPort=ntdll.ZwQueryInformationPort")
#pragma comment(linker, "/export:ZwQueryInformationProcess=ntdll.ZwQueryInformationProcess")
#pragma comment(linker, "/export:ZwQueryInformationThread=ntdll.ZwQueryInformationThread")
#pragma comment(linker, "/export:ZwQueryInformationToken=ntdll.ZwQueryInformationToken")
#pragma comment(linker, "/export:ZwQueryIntervalProfile=ntdll.ZwQueryIntervalProfile")
#pragma comment(linker, "/export:ZwQueryIoCompletion=ntdll.ZwQueryIoCompletion")
#pragma comment(linker, "/export:ZwQueryKey=ntdll.ZwQueryKey")
#pragma comment(linker, "/export:ZwQueryMultipleValueKey=ntdll.ZwQueryMultipleValueKey")
#pragma comment(linker, "/export:ZwQueryMutant=ntdll.ZwQueryMutant")
#pragma comment(linker, "/export:ZwQueryObject=ntdll.ZwQueryObject")
#pragma comment(linker, "/export:ZwQueryOleDirectoryFile=ntdll.ZwQueryOleDirectoryFile")
#pragma comment(linker, "/export:ZwQueryPerformanceCounter=ntdll.ZwQueryPerformanceCounter")
#pragma comment(linker, "/export:ZwQuerySection=ntdll.ZwQuerySection")
#pragma comment(linker, "/export:ZwQuerySecurityObject=ntdll.ZwQuerySecurityObject")
#pragma comment(linker, "/export:ZwQuerySemaphore=ntdll.ZwQuerySemaphore")
#pragma comment(linker, "/export:ZwQuerySymbolicLinkObject=ntdll.ZwQuerySymbolicLinkObject")
#pragma comment(linker, "/export:ZwQuerySystemEnvironmentValue=ntdll.ZwQuerySystemEnvironmentValue")
#pragma comment(linker, "/export:ZwQuerySystemInformation=ntdll.ZwQuerySystemInformation")
#pragma comment(linker, "/export:ZwQuerySystemTime=ntdll.ZwQuerySystemTime")
#pragma comment(linker, "/export:ZwQueryTimer=ntdll.ZwQueryTimer")
#pragma comment(linker, "/export:ZwQueryTimerResolution=ntdll.ZwQueryTimerResolution")
#pragma comment(linker, "/export:ZwQueryValueKey=ntdll.ZwQueryValueKey")
#pragma comment(linker, "/export:ZwQueryVirtualMemory=ntdll.ZwQueryVirtualMemory")
#pragma comment(linker, "/export:ZwQueryVolumeInformationFile=ntdll.ZwQueryVolumeInformationFile")
#pragma comment(linker, "/export:ZwQueueApcThread=ntdll.ZwQueueApcThread")
#pragma comment(linker, "/export:ZwRaiseException=ntdll.ZwRaiseException")
#pragma comment(linker, "/export:ZwRaiseHardError=ntdll.ZwRaiseHardError")
#pragma comment(linker, "/export:ZwReadFile=ntdll.ZwReadFile")
#pragma comment(linker, "/export:ZwReadFileScatter=ntdll.ZwReadFileScatter")
#pragma comment(linker, "/export:ZwReadRequestData=ntdll.ZwReadRequestData")
#pragma comment(linker, "/export:ZwReadVirtualMemory=ntdll.ZwReadVirtualMemory")
#pragma comment(linker, "/export:ZwRegisterThreadTerminatePort=ntdll.ZwRegisterThreadTerminatePort")
#pragma comment(linker, "/export:ZwReleaseMutant=ntdll.ZwReleaseMutant")
#pragma comment(linker, "/export:ZwReleaseSemaphore=ntdll.ZwReleaseSemaphore")
#pragma comment(linker, "/export:ZwRemoveIoCompletion=ntdll.ZwRemoveIoCompletion")
#pragma comment(linker, "/export:ZwReplaceKey=ntdll.ZwReplaceKey")
#pragma comment(linker, "/export:ZwReplyPort=ntdll.ZwReplyPort")
#pragma comment(linker, "/export:ZwReplyWaitReceivePort=ntdll.ZwReplyWaitReceivePort")
#pragma comment(linker, "/export:ZwReplyWaitReplyPort=ntdll.ZwReplyWaitReplyPort")
#pragma comment(linker, "/export:ZwReplyWaitSendChannel=ntdll.ZwReplyWaitSendChannel")
#pragma comment(linker, "/export:ZwRequestPort=ntdll.ZwRequestPort")
#pragma comment(linker, "/export:ZwRequestWaitReplyPort=ntdll.ZwRequestWaitReplyPort")
#pragma comment(linker, "/export:ZwResetEvent=ntdll.ZwResetEvent")
#pragma comment(linker, "/export:ZwRestoreKey=ntdll.ZwRestoreKey")
#pragma comment(linker, "/export:ZwResumeThread=ntdll.ZwResumeThread")
#pragma comment(linker, "/export:ZwSaveKey=ntdll.ZwSaveKey")
#pragma comment(linker, "/export:ZwSendWaitReplyChannel=ntdll.ZwSendWaitReplyChannel")
#pragma comment(linker, "/export:ZwSetContextChannel=ntdll.ZwSetContextChannel")
#pragma comment(linker, "/export:ZwSetContextThread=ntdll.ZwSetContextThread")
#pragma comment(linker, "/export:ZwSetDefaultHardErrorPort=ntdll.ZwSetDefaultHardErrorPort")
#pragma comment(linker, "/export:ZwSetDefaultLocale=ntdll.ZwSetDefaultLocale")
#pragma comment(linker, "/export:ZwSetEaFile=ntdll.ZwSetEaFile")
#pragma comment(linker, "/export:ZwSetEvent=ntdll.ZwSetEvent")
#pragma comment(linker, "/export:ZwSetHighEventPair=ntdll.ZwSetHighEventPair")
#pragma comment(linker, "/export:ZwSetHighWaitLowEventPair=ntdll.ZwSetHighWaitLowEventPair")
#pragma comment(linker, "/export:ZwSetHighWaitLowThread=ntdll.ZwSetHighWaitLowThread")
#pragma comment(linker, "/export:ZwSetInformationFile=ntdll.ZwSetInformationFile")
#pragma comment(linker, "/export:ZwSetInformationKey=ntdll.ZwSetInformationKey")
#pragma comment(linker, "/export:ZwSetInformationObject=ntdll.ZwSetInformationObject")
#pragma comment(linker, "/export:ZwSetInformationProcess=ntdll.ZwSetInformationProcess")
#pragma comment(linker, "/export:ZwSetInformationThread=ntdll.ZwSetInformationThread")
#pragma comment(linker, "/export:ZwSetInformationToken=ntdll.ZwSetInformationToken")
#pragma comment(linker, "/export:ZwSetIntervalProfile=ntdll.ZwSetIntervalProfile")
#pragma comment(linker, "/export:ZwSetIoCompletion=ntdll.ZwSetIoCompletion")
#pragma comment(linker, "/export:ZwSetLdtEntries=ntdll.ZwSetLdtEntries")
#pragma comment(linker, "/export:ZwSetLowEventPair=ntdll.ZwSetLowEventPair")
#pragma comment(linker, "/export:ZwSetLowWaitHighEventPair=ntdll.ZwSetLowWaitHighEventPair")
#pragma comment(linker, "/export:ZwSetLowWaitHighThread=ntdll.ZwSetLowWaitHighThread")
#pragma comment(linker, "/export:ZwSetSecurityObject=ntdll.ZwSetSecurityObject")
#pragma comment(linker, "/export:ZwSetSystemEnvironmentValue=ntdll.ZwSetSystemEnvironmentValue")
#pragma comment(linker, "/export:ZwSetSystemInformation=ntdll.ZwSetSystemInformation")
#pragma comment(linker, "/export:ZwSetSystemPowerState=ntdll.ZwSetSystemPowerState")
#pragma comment(linker, "/export:ZwSetSystemTime=ntdll.ZwSetSystemTime")
#pragma comment(linker, "/export:ZwSetTimer=ntdll.ZwSetTimer")
#pragma comment(linker, "/export:ZwSetTimerResolution=ntdll.ZwSetTimerResolution")
#pragma comment(linker, "/export:ZwSetValueKey=ntdll.ZwSetValueKey")
#pragma comment(linker, "/export:ZwSetVolumeInformationFile=ntdll.ZwSetVolumeInformationFile")
#pragma comment(linker, "/export:ZwShutdownSystem=ntdll.ZwShutdownSystem")
#pragma comment(linker, "/export:ZwSignalAndWaitForSingleObject=ntdll.ZwSignalAndWaitForSingleObject")
#pragma comment(linker, "/export:ZwStartProfile=ntdll.ZwStartProfile")
#pragma comment(linker, "/export:ZwStopProfile=ntdll.ZwStopProfile")
#pragma comment(linker, "/export:ZwSuspendThread=ntdll.ZwSuspendThread")
#pragma comment(linker, "/export:ZwSystemDebugControl=ntdll.ZwSystemDebugControl")
#pragma comment(linker, "/export:ZwTerminateProcess=ntdll.ZwTerminateProcess")
#pragma comment(linker, "/export:ZwTerminateThread=ntdll.ZwTerminateThread")
#pragma comment(linker, "/export:ZwTestAlert=ntdll.ZwTestAlert")
#pragma comment(linker, "/export:ZwUnloadDriver=ntdll.ZwUnloadDriver")
#pragma comment(linker, "/export:ZwUnloadKey=ntdll.ZwUnloadKey")
#pragma comment(linker, "/export:ZwUnlockFile=ntdll.ZwUnlockFile")
#pragma comment(linker, "/export:ZwUnlockVirtualMemory=ntdll.ZwUnlockVirtualMemory")
#pragma comment(linker, "/export:ZwUnmapViewOfSection=ntdll.ZwUnmapViewOfSection")
#pragma comment(linker, "/export:ZwVdmControl=ntdll.ZwVdmControl")
#pragma comment(linker, "/export:ZwWaitForMultipleObjects=ntdll.ZwWaitForMultipleObjects")
#pragma comment(linker, "/export:ZwWaitForSingleObject=ntdll.ZwWaitForSingleObject")
#pragma comment(linker, "/export:ZwWaitHighEventPair=ntdll.ZwWaitHighEventPair")
#pragma comment(linker, "/export:ZwWaitLowEventPair=ntdll.ZwWaitLowEventPair")
#pragma comment(linker, "/export:ZwWriteFile=ntdll.ZwWriteFile")
#pragma comment(linker, "/export:ZwWriteFileGather=ntdll.ZwWriteFileGather")
#pragma comment(linker, "/export:ZwWriteRequestData=ntdll.ZwWriteRequestData")
#pragma comment(linker, "/export:ZwWriteVirtualMemory=ntdll.ZwWriteVirtualMemory")
#pragma comment(linker, "/export:ZwYieldExecution=ntdll.ZwYieldExecution")
#pragma comment(linker, "/export:_CIpow=ntdll._CIpow")
#pragma comment(linker, "/export:__eCommonExceptions=ntdll.__eCommonExceptions")
#pragma comment(linker, "/export:__eEmulatorInit=ntdll.__eEmulatorInit")
#pragma comment(linker, "/export:__eF2XM1=ntdll.__eF2XM1")
#pragma comment(linker, "/export:__eFABS=ntdll.__eFABS")
#pragma comment(linker, "/export:__eFADD32=ntdll.__eFADD32")
#pragma comment(linker, "/export:__eFADD64=ntdll.__eFADD64")
#pragma comment(linker, "/export:__eFADDPreg=ntdll.__eFADDPreg")
#pragma comment(linker, "/export:__eFADDreg=ntdll.__eFADDreg")
#pragma comment(linker, "/export:__eFADDtop=ntdll.__eFADDtop")
#pragma comment(linker, "/export:__eFCHS=ntdll.__eFCHS")
#pragma comment(linker, "/export:__eFCOM=ntdll.__eFCOM")
#pragma comment(linker, "/export:__eFCOM32=ntdll.__eFCOM32")
#pragma comment(linker, "/export:__eFCOM64=ntdll.__eFCOM64")
#pragma comment(linker, "/export:__eFCOMP=ntdll.__eFCOMP")
#pragma comment(linker, "/export:__eFCOMP32=ntdll.__eFCOMP32")
#pragma comment(linker, "/export:__eFCOMP64=ntdll.__eFCOMP64")
#pragma comment(linker, "/export:__eFCOMPP=ntdll.__eFCOMPP")
#pragma comment(linker, "/export:__eFCOS=ntdll.__eFCOS")
#pragma comment(linker, "/export:__eFDECSTP=ntdll.__eFDECSTP")
#pragma comment(linker, "/export:__eFDIV32=ntdll.__eFDIV32")
#pragma comment(linker, "/export:__eFDIV64=ntdll.__eFDIV64")
#pragma comment(linker, "/export:__eFDIVPreg=ntdll.__eFDIVPreg")
#pragma comment(linker, "/export:__eFDIVR32=ntdll.__eFDIVR32")
#pragma comment(linker, "/export:__eFDIVR64=ntdll.__eFDIVR64")
#pragma comment(linker, "/export:__eFDIVRPreg=ntdll.__eFDIVRPreg")
#pragma comment(linker, "/export:__eFDIVRreg=ntdll.__eFDIVRreg")
#pragma comment(linker, "/export:__eFDIVRtop=ntdll.__eFDIVRtop")
#pragma comment(linker, "/export:__eFDIVreg=ntdll.__eFDIVreg")
#pragma comment(linker, "/export:__eFDIVtop=ntdll.__eFDIVtop")
#pragma comment(linker, "/export:__eFFREE=ntdll.__eFFREE")
#pragma comment(linker, "/export:__eFIADD16=ntdll.__eFIADD16")
#pragma comment(linker, "/export:__eFIADD32=ntdll.__eFIADD32")
#pragma comment(linker, "/export:__eFICOM16=ntdll.__eFICOM16")
#pragma comment(linker, "/export:__eFICOM32=ntdll.__eFICOM32")
#pragma comment(linker, "/export:__eFICOMP16=ntdll.__eFICOMP16")
#pragma comment(linker, "/export:__eFICOMP32=ntdll.__eFICOMP32")
#pragma comment(linker, "/export:__eFIDIV16=ntdll.__eFIDIV16")
#pragma comment(linker, "/export:__eFIDIV32=ntdll.__eFIDIV32")
#pragma comment(linker, "/export:__eFIDIVR16=ntdll.__eFIDIVR16")
#pragma comment(linker, "/export:__eFIDIVR32=ntdll.__eFIDIVR32")
#pragma comment(linker, "/export:__eFILD16=ntdll.__eFILD16")
#pragma comment(linker, "/export:__eFILD32=ntdll.__eFILD32")
#pragma comment(linker, "/export:__eFILD64=ntdll.__eFILD64")
#pragma comment(linker, "/export:__eFIMUL16=ntdll.__eFIMUL16")
#pragma comment(linker, "/export:__eFIMUL32=ntdll.__eFIMUL32")
#pragma comment(linker, "/export:__eFINCSTP=ntdll.__eFINCSTP")
#pragma comment(linker, "/export:__eFINIT=ntdll.__eFINIT")
#pragma comment(linker, "/export:__eFIST16=ntdll.__eFIST16")
#pragma comment(linker, "/export:__eFIST32=ntdll.__eFIST32")
#pragma comment(linker, "/export:__eFISTP16=ntdll.__eFISTP16")
#pragma comment(linker, "/export:__eFISTP32=ntdll.__eFISTP32")
#pragma comment(linker, "/export:__eFISTP64=ntdll.__eFISTP64")
#pragma comment(linker, "/export:__eFISUB16=ntdll.__eFISUB16")
#pragma comment(linker, "/export:__eFISUB32=ntdll.__eFISUB32")
#pragma comment(linker, "/export:__eFISUBR16=ntdll.__eFISUBR16")
#pragma comment(linker, "/export:__eFISUBR32=ntdll.__eFISUBR32")
#pragma comment(linker, "/export:__eFLD1=ntdll.__eFLD1")
#pragma comment(linker, "/export:__eFLD32=ntdll.__eFLD32")
#pragma comment(linker, "/export:__eFLD64=ntdll.__eFLD64")
#pragma comment(linker, "/export:__eFLD80=ntdll.__eFLD80")
#pragma comment(linker, "/export:__eFLDCW=ntdll.__eFLDCW")
#pragma comment(linker, "/export:__eFLDENV=ntdll.__eFLDENV")
#pragma comment(linker, "/export:__eFLDL2E=ntdll.__eFLDL2E")
#pragma comment(linker, "/export:__eFLDLN2=ntdll.__eFLDLN2")
#pragma comment(linker, "/export:__eFLDPI=ntdll.__eFLDPI")
#pragma comment(linker, "/export:__eFLDZ=ntdll.__eFLDZ")
#pragma comment(linker, "/export:__eFMUL32=ntdll.__eFMUL32")
#pragma comment(linker, "/export:__eFMUL64=ntdll.__eFMUL64")
#pragma comment(linker, "/export:__eFMULPreg=ntdll.__eFMULPreg")
#pragma comment(linker, "/export:__eFMULreg=ntdll.__eFMULreg")
#pragma comment(linker, "/export:__eFMULtop=ntdll.__eFMULtop")
#pragma comment(linker, "/export:__eFPATAN=ntdll.__eFPATAN")
#pragma comment(linker, "/export:__eFPREM=ntdll.__eFPREM")
#pragma comment(linker, "/export:__eFPREM1=ntdll.__eFPREM1")
#pragma comment(linker, "/export:__eFPTAN=ntdll.__eFPTAN")
#pragma comment(linker, "/export:__eFRNDINT=ntdll.__eFRNDINT")
#pragma comment(linker, "/export:__eFRSTOR=ntdll.__eFRSTOR")
#pragma comment(linker, "/export:__eFSAVE=ntdll.__eFSAVE")
#pragma comment(linker, "/export:__eFSCALE=ntdll.__eFSCALE")
#pragma comment(linker, "/export:__eFSIN=ntdll.__eFSIN")
#pragma comment(linker, "/export:__eFSQRT=ntdll.__eFSQRT")
#pragma comment(linker, "/export:__eFST=ntdll.__eFST")
#pragma comment(linker, "/export:__eFST32=ntdll.__eFST32")
#pragma comment(linker, "/export:__eFST64=ntdll.__eFST64")
#pragma comment(linker, "/export:__eFSTCW=ntdll.__eFSTCW")
#pragma comment(linker, "/export:__eFSTENV=ntdll.__eFSTENV")
#pragma comment(linker, "/export:__eFSTP=ntdll.__eFSTP")
#pragma comment(linker, "/export:__eFSTP32=ntdll.__eFSTP32")
#pragma comment(linker, "/export:__eFSTP64=ntdll.__eFSTP64")
#pragma comment(linker, "/export:__eFSTP80=ntdll.__eFSTP80")
#pragma comment(linker, "/export:__eFSTSW=ntdll.__eFSTSW")
#pragma comment(linker, "/export:__eFSUB32=ntdll.__eFSUB32")
#pragma comment(linker, "/export:__eFSUB64=ntdll.__eFSUB64")
#pragma comment(linker, "/export:__eFSUBPreg=ntdll.__eFSUBPreg")
#pragma comment(linker, "/export:__eFSUBR32=ntdll.__eFSUBR32")
#pragma comment(linker, "/export:__eFSUBR64=ntdll.__eFSUBR64")
#pragma comment(linker, "/export:__eFSUBRPreg=ntdll.__eFSUBRPreg")
#pragma comment(linker, "/export:__eFSUBRreg=ntdll.__eFSUBRreg")
#pragma comment(linker, "/export:__eFSUBRtop=ntdll.__eFSUBRtop")
#pragma comment(linker, "/export:__eFSUBreg=ntdll.__eFSUBreg")
#pragma comment(linker, "/export:__eFSUBtop=ntdll.__eFSUBtop")
#pragma comment(linker, "/export:__eFTST=ntdll.__eFTST")
#pragma comment(linker, "/export:__eFUCOM=ntdll.__eFUCOM")
#pragma comment(linker, "/export:__eFUCOMP=ntdll.__eFUCOMP")
#pragma comment(linker, "/export:__eFUCOMPP=ntdll.__eFUCOMPP")
#pragma comment(linker, "/export:__eFXAM=ntdll.__eFXAM")
#pragma comment(linker, "/export:__eFXCH=ntdll.__eFXCH")
#pragma comment(linker, "/export:__eFXTRACT=ntdll.__eFXTRACT")
#pragma comment(linker, "/export:__eFYL2X=ntdll.__eFYL2X")
#pragma comment(linker, "/export:__eFYL2XP1=ntdll.__eFYL2XP1")
#pragma comment(linker, "/export:__eGetStatusWord=ntdll.__eGetStatusWord")
#pragma comment(linker, "/export:__isascii=ntdll.__isascii")
#pragma comment(linker, "/export:__iscsym=ntdll.__iscsym")
#pragma comment(linker, "/export:__iscsymf=ntdll.__iscsymf")
#pragma comment(linker, "/export:__toascii=ntdll.__toascii")
#pragma comment(linker, "/export:_alldiv=ntdll._alldiv")
#pragma comment(linker, "/export:_allmul=ntdll._allmul")
#pragma comment(linker, "/export:_alloca_probe=ntdll._alloca_probe")
#pragma comment(linker, "/export:_allrem=ntdll._allrem")
#pragma comment(linker, "/export:_allshl=ntdll._allshl")
#pragma comment(linker, "/export:_allshr=ntdll._allshr")
#pragma comment(linker, "/export:_atoi64=ntdll._atoi64")
#pragma comment(linker, "/export:_aulldiv=ntdll._aulldiv")
#pragma comment(linker, "/export:_aullrem=ntdll._aullrem")
#pragma comment(linker, "/export:_aullshr=ntdll._aullshr")
#pragma comment(linker, "/export:_chkstk=ntdll._chkstk")
#pragma comment(linker, "/export:_fltused=ntdll._fltused")
#pragma comment(linker, "/export:_ftol=ntdll._ftol")
#pragma comment(linker, "/export:_i64toa=ntdll._i64toa")
#pragma comment(linker, "/export:_i64tow=ntdll._i64tow")
#pragma comment(linker, "/export:_itoa=ntdll._itoa")
#pragma comment(linker, "/export:_itow=ntdll._itow")
#pragma comment(linker, "/export:_ltoa=ntdll._ltoa")
#pragma comment(linker, "/export:_ltow=ntdll._ltow")
#pragma comment(linker, "/export:_memccpy=ntdll._memccpy")
#pragma comment(linker, "/export:_memicmp=ntdll._memicmp")
#pragma comment(linker, "/export:_snprintf=ntdll._snprintf")
#pragma comment(linker, "/export:_snwprintf=ntdll._snwprintf")
#pragma comment(linker, "/export:_splitpath=ntdll._splitpath")
#pragma comment(linker, "/export:_strcmpi=ntdll._strcmpi")
#pragma comment(linker, "/export:_stricmp=ntdll._stricmp")
#pragma comment(linker, "/export:_strlwr=ntdll._strlwr")
#pragma comment(linker, "/export:_strnicmp=ntdll._strnicmp")
#pragma comment(linker, "/export:_strupr=ntdll._strupr")
#pragma comment(linker, "/export:_tolower=ntdll._tolower")
#pragma comment(linker, "/export:_toupper=ntdll._toupper")
#pragma comment(linker, "/export:_ultoa=ntdll._ultoa")
#pragma comment(linker, "/export:_ultow=ntdll._ultow")
#pragma comment(linker, "/export:_vsnprintf=ntdll._vsnprintf")
#pragma comment(linker, "/export:_wcsicmp=ntdll._wcsicmp")
#pragma comment(linker, "/export:_wcslwr=ntdll._wcslwr")
#pragma comment(linker, "/export:_wcsnicmp=ntdll._wcsnicmp")
#pragma comment(linker, "/export:_wcsupr=ntdll._wcsupr")
#pragma comment(linker, "/export:_wtoi=ntdll._wtoi")
#pragma comment(linker, "/export:_wtoi64=ntdll._wtoi64")
#pragma comment(linker, "/export:_wtol=ntdll._wtol")
#pragma comment(linker, "/export:abs=ntdll.abs")
#pragma comment(linker, "/export:atan=ntdll.atan")
#pragma comment(linker, "/export:atoi=ntdll.atoi")
#pragma comment(linker, "/export:atol=ntdll.atol")
#pragma comment(linker, "/export:ceil=ntdll.ceil")
#pragma comment(linker, "/export:cos=ntdll.cos")
#pragma comment(linker, "/export:fabs=ntdll.fabs")
#pragma comment(linker, "/export:floor=ntdll.floor")
#pragma comment(linker, "/export:isalnum=ntdll.isalnum")
#pragma comment(linker, "/export:isalpha=ntdll.isalpha")
#pragma comment(linker, "/export:iscntrl=ntdll.iscntrl")
#pragma comment(linker, "/export:isdigit=ntdll.isdigit")
#pragma comment(linker, "/export:isgraph=ntdll.isgraph")
#pragma comment(linker, "/export:islower=ntdll.islower")
#pragma comment(linker, "/export:isprint=ntdll.isprint")
#pragma comment(linker, "/export:ispunct=ntdll.ispunct")
#pragma comment(linker, "/export:isspace=ntdll.isspace")
#pragma comment(linker, "/export:isupper=ntdll.isupper")
#pragma comment(linker, "/export:iswalpha=ntdll.iswalpha")
#pragma comment(linker, "/export:iswctype=ntdll.iswctype")
#pragma comment(linker, "/export:isxdigit=ntdll.isxdigit")
#pragma comment(linker, "/export:labs=ntdll.labs")
#pragma comment(linker, "/export:log=ntdll.log")
#pragma comment(linker, "/export:mbstowcs=ntdll.mbstowcs")
#pragma comment(linker, "/export:memchr=ntdll.memchr")
#pragma comment(linker, "/export:memcmp=ntdll.memcmp")
#pragma comment(linker, "/export:memcpy=ntdll.memcpy")
#pragma comment(linker, "/export:memmove=ntdll.memmove")
#pragma comment(linker, "/export:memset=ntdll.memset")
#pragma comment(linker, "/export:pow=ntdll.pow")
#pragma comment(linker, "/export:qsort=ntdll.qsort")
#pragma comment(linker, "/export:sin=ntdll.sin")
#pragma comment(linker, "/export:sprintf=ntdll.sprintf")
#pragma comment(linker, "/export:sqrt=ntdll.sqrt")
#pragma comment(linker, "/export:sscanf=ntdll.sscanf")
#pragma comment(linker, "/export:strcat=ntdll.strcat")
#pragma comment(linker, "/export:strchr=ntdll.strchr")
#pragma comment(linker, "/export:strcmp=ntdll.strcmp")
#pragma comment(linker, "/export:strcpy=ntdll.strcpy")
#pragma comment(linker, "/export:strcspn=ntdll.strcspn")
#pragma comment(linker, "/export:strlen=ntdll.strlen")
#pragma comment(linker, "/export:strncat=ntdll.strncat")
#pragma comment(linker, "/export:strncmp=ntdll.strncmp")
#pragma comment(linker, "/export:strncpy=ntdll.strncpy")
#pragma comment(linker, "/export:strpbrk=ntdll.strpbrk")
#pragma comment(linker, "/export:strrchr=ntdll.strrchr")
#pragma comment(linker, "/export:strspn=ntdll.strspn")
#pragma comment(linker, "/export:strstr=ntdll.strstr")
#pragma comment(linker, "/export:strtol=ntdll.strtol")
#pragma comment(linker, "/export:strtoul=ntdll.strtoul")
#pragma comment(linker, "/export:swprintf=ntdll.swprintf")
#pragma comment(linker, "/export:tan=ntdll.tan")
#pragma comment(linker, "/export:tolower=ntdll.tolower")
#pragma comment(linker, "/export:toupper=ntdll.toupper")
#pragma comment(linker, "/export:towlower=ntdll.towlower")
#pragma comment(linker, "/export:towupper=ntdll.towupper")
#pragma comment(linker, "/export:vsprintf=ntdll.vsprintf")
#pragma comment(linker, "/export:wcscat=ntdll.wcscat")
#pragma comment(linker, "/export:wcschr=ntdll.wcschr")
#pragma comment(linker, "/export:wcscmp=ntdll.wcscmp")
#pragma comment(linker, "/export:wcscpy=ntdll.wcscpy")
#pragma comment(linker, "/export:wcscspn=ntdll.wcscspn")
#pragma comment(linker, "/export:wcslen=ntdll.wcslen")
#pragma comment(linker, "/export:wcsncat=ntdll.wcsncat")
#pragma comment(linker, "/export:wcsncmp=ntdll.wcsncmp")
#pragma comment(linker, "/export:wcsncpy=ntdll.wcsncpy")
#pragma comment(linker, "/export:wcspbrk=ntdll.wcspbrk")
#pragma comment(linker, "/export:wcsrchr=ntdll.wcsrchr")
#pragma comment(linker, "/export:wcsspn=ntdll.wcsspn")
#pragma comment(linker, "/export:wcsstr=ntdll.wcsstr")
#pragma comment(linker, "/export:wcstol=ntdll.wcstol")
#pragma comment(linker, "/export:wcstombs=ntdll.wcstombs")
#pragma comment(linker, "/export:wcstoul=ntdll.wcstoul")
